<module>
<baseinfo>
name=生成手机静态
team=NetLife
time=2017-04-08
email=40150501@qq.com
url=
hash=c2e2b9756dab37ed2c0d421a9ca7b69e
indexname=
indexurl=
ismember=0
autosetup=1
autodel=1
lang=utf-8
moduletype=soft
</baseinfo>
<systemfile>
<menustring>

</menustring>
<readme>
PHAgc3R5bGU9J2xpbmUtaGVpZ2h0OjE1MCUnPuazqOaEj+ebruW9leWPr+WGmTwvcD4=
</readme>
<setupsql40>
SU5TRVJUIElOVE8gYCNAX19zeXNjb25maWdgIChgYWlkYCwgYHZhcm5hbWVgLCBgaW5mb2AsIGBncm91cGlkYCwgYHR5cGVgLCBgdmFsdWVgKSBWQUxVRVMgKDAsICdjZmdfd2FwdXJsJywgJ+aJi+acuue9keWdgCcsIDEsICdzdHJpbmcnLCAnaHR0cDovL20uKioqLmNvbScpLCgwLCAnY2ZnX3dhcGh0bWwnLCAn5omL5py65qih5p2/JywgMSwgJ3N0cmluZycsICd3YXAnKSwoMCwgJ2NmZ193YXBwYXRoJywgJ3dhcOeUn+aIkOebruW9lScsIDEsICdzdHJpbmcnLCAnd2FwJyk7
</setupsql40>
<delsql>
REVMRVRFIEZST00gYCNAX19zeXNjb25maWdgIHdoZXJlIHZhcm5hbWUgPSdjZmdfd2FwdXJsJzsNCkRFTEVURSBGUk9NIGAjQF9fc3lzY29uZmlnYCB3aGVyZSB2YXJuYW1lID0nY2ZnX3dhcGh0bWwnOw0KREVMRVRFIEZST00gYCNAX19zeXNjb25maWdgIHdoZXJlIHZhcm5hbWUgPSdjZmdfd2FwcGF0aCc7
</delsql>
<setup>

</setup>
<uninstall>

</uninstall>
<oldfilelist>
../include/arc.wap_index.php
../include/arc.archives.class_wap.php
../include/arc.listview.class_wap.php
../include/helpers/channelunit.helper.php
makehtml_all_wap.php
makehtml_archives_wap.php
makehtml_homepage_wap.php
makehtml_archives_action_wap.php
makehtml_list_wap.php
makehtml_list_action_wap.php
templets/makehtml_list_wap.htm
templets/makehtml_homepage_wap.htm
templets/makehtml_archives_wap.htm
templets/makehtml_all_wap.htm
inc/inc_menu.php
</oldfilelist>
</systemfile>

<modulefiles>
<file type='file' name='../include/arc.wap_index.php'>
PD9waHAgICBpZighZGVmaW5lZCgnREVERUlOQycpKSBleGl0KCJSZXF1ZXN0IEVycm9yISIpOw0NCi8qKg0NCiAqIOWNleihqOaooeWei+inhuWbvuexuw0NCiAqDQ0KICogQHZlcnNpb24gICAgICAgICRJZDogYXJjLnNncGFnZS5jbGFzcy5waHAgMSAxNTo0OCAyMDEw5bm0N+aciDfml6VaIHRpYW55YSAkDQ0KICogQHBhY2thZ2UgICAgICAgIERlZGVDTVMuTGlicmFyaWVzDQ0KICogQGNvcHlyaWdodCAgICAgIENvcHlyaWdodCAoYykgMjAwNyAtIDIwMTAsIERlc0RldiwgSW5jLg0NCiAqIEBsaWNlbnNlICAgICAgICBodHRwOi8vaGVscC5kZWRlY21zLmNvbS91c2Vyc2d1aWRlL2xpY2Vuc2UuaHRtbA0NCiAqIEBsaW5rICAgICAgICAgICBodHRwOi8vd3d3LmRlZGVjbXMuY29tDQ0KICovDQ0KZGVmaW5lKCdERURFTU9CJywgJ1knKTsNDQpkZWZpbmUoJ2NmZ19tdWx0aV9zaXRlJywnTicpOw0NCnJlcXVpcmVfb25jZShERURFSU5DLiIvYXJjLnBhcnR2aWV3LmNsYXNzLnBocCIpOw0NCg0NCi8qKg0NCiAqIOWNleihqOaooeWei+WIl+ihqOinhuWbvuexuw0NCiAqDQ0KICogQHBhY2thZ2UgICAgICAgICAgU2dMaXN0Vmlldw0NCiAqIEBzdWJwYWNrYWdlICAgICAgIERlZGVDTVMuTGlicmFyaWVzDQ0KICogQGxpbmsgICAgICAgICAgICAgaHR0cDovL3d3dy5kZWRlY21zLmNvbQ0NCiAqLw0NCmNsYXNzIHNncGFnZQ0NCnsNDQogICAgdmFyICRkc3FsOw0NCiAgICB2YXIgJGR0cDsNDQogICAgdmFyICRUeXBlSUQ7DQ0KICAgIHZhciAkRmllbGRzOw0NCiAgICB2YXIgJFR5cGVMaW5rOw0NCiAgICB2YXIgJHBhcnRWaWV3Ow0NCg0NCiAgICAvKioNDQogICAgICogIHBocDXmnoTpgKDlh73mlbANDQogICAgICoNDQogICAgICogQGFjY2VzcyAgICBwdWJsaWMNDQogICAgICogQHBhcmFtICAgICBpbnQgICRhaWQgIOWGheWuuUlEDQ0KICAgICAqIEByZXR1cm4gICAgc3RyaW5nDQ0KICAgICAqLw0NCiAgICBmdW5jdGlvbiBfX2NvbnN0cnVjdCgkYWlkKQ0NCiAgICB7DQ0KICAgICAgICBnbG9iYWwgJGNmZ19iYXNlZGlyLCRjZmdfdGVtcGxldHNfZGlyLCRjZmdfZGZfc3R5bGUsJGVudnM7DQ0KDQ0KICAgICAgICAkdGhpcy0+ZHNxbCA9ICRHTE9CQUxTWydkc3FsJ107DQ0KICAgICAgICAkdGhpcy0+ZHRwID0gbmV3IERlZGVUYWdQYXJzZSgpOw0NCiAgICAgICAgJHRoaXMtPmR0cC0+cmVmT2JqID0gJHRoaXM7DQ0KICAgICAgICAkdGhpcy0+ZHRwLT5TZXROYW1lU3BhY2UoImRlZGUiLCJ7IiwifSIpOw0NCiAgICAgICAgJHRwbGZpbGUgPSAkY2ZnX2Jhc2VkaXIuJGNmZ190ZW1wbGV0c19kaXIuJy8nLiRjZmdfZGZfc3R5bGUuJy9pbmRleF9tLmh0bSc7DQ0KICAgICAgICAkdHBsZmlsZT1zdHJfcmVwbGFjZSgkY2ZnX2RmX3N0eWxlLCAkR0xPQkFMU1snY2ZnX3dhcGh0bWwnXSwgJHRwbGZpbGUpOw0NCiAgICAgICAgJHRoaXMtPmR0cC0+TG9hZFRlbXBsYXRlKCR0cGxmaWxlKTsNDQogICAgICAgICR0aGlzLT5QYXJzZVRlbXBsZXQoKTsNDQogICAgfQ0NCg0NCiAgICAvL3BocDTmnoTpgKDlh73mlbANDQogICAgZnVuY3Rpb24gc2dwYWdlKCRhaWQpDQ0KICAgIHsNDQogICAgICAgICR0aGlzLT5fX2NvbnN0cnVjdCgkYWlkKTsNDQogICAgfQ0NCg0NCiAgICAvKioNDQogICAgICogIOaYvuekuuWGheWuuQ0NCiAgICAgKg0NCiAgICAgKiBAYWNjZXNzICAgIHB1YmxpYw0NCiAgICAgKiBAcmV0dXJuICAgIHZvaWQNDQogICAgICovDQ0KICAgIGZ1bmN0aW9uIERpc3BsYXkoKQ0NCiAgICB7DQ0KICAgICAgICAkdGhpcy0+ZHRwLT5EaXNwbGF5KCk7DQ0KICAgIH0NDQoNDQogICAgLyoqDQ0KICAgICAqICDojrflj5blhoXlrrkNDQogICAgICoNDQogICAgICogQGFjY2VzcyAgICBwdWJsaWMNDQogICAgICogQHJldHVybiAgICB2b2lkDQ0KICAgICAqLw0NCiAgICBmdW5jdGlvbiBHZXRSZXN1bHQoKQ0NCiAgICB7DQ0KICAgICAgICByZXR1cm4gJHRoaXMtPmR0cC0+R2V0UmVzdWx0KCk7DQ0KICAgIH0NDQoNDQogICAgLyoqDQ0KICAgICAqICDkv53lrZjnu5PmnpzkuLrmlofku7YNDQogICAgICoNDQogICAgICogQGFjY2VzcyAgICBwdWJsaWMNDQogICAgICogQHJldHVybiAgICB2b2lkDQ0KICAgICAqLw0NCiAgICBmdW5jdGlvbiBTYXZlVG9IdG1sKCkNDQogICAgew0NCiAgICAgICAgJGZpbGVuYW1lID0gInskR0xPQkFMU1snY2ZnX2Jhc2VkaXInXX0veyRHTE9CQUxTWydjZmdfd2FwcGF0aCddfS9pbmRleC5odG1sIjsNDQogICAgICAgICRmaWxlbmFtZSA9IHByZWdfcmVwbGFjZSgiL1wvezEsfS8iLCAnLycsICRmaWxlbmFtZSk7DQ0KICAgICAgICAkdGhpcy0+ZHRwLT5TYXZlVG8oJGZpbGVuYW1lKTsNDQogICAgfQ0NCg0NCiAgICAvKioNDQogICAgICogIOino+aekOaooeadv+mHjOeahOagh+etvg0NCiAgICAgKg0NCiAgICAgKiBAYWNjZXNzICAgIHB1YmxpYw0NCiAgICAgKiBAcmV0dXJuICAgIHN0cmluZw0NCiAgICAgKi8NDQogICAgZnVuY3Rpb24gUGFyc2VUZW1wbGV0KCkNDQogICAgew0NCiAgICAgICAgJEdMT0JBTFNbJ2VudnMnXVsnbGlrZWlkJ10gPSAkdGhpcy0+RmllbGRzWydsaWtlaWQnXTsNDQogICAgICAgIE1ha2VPbmVUYWcoJHRoaXMtPmR0cCwkdGhpcyk7DQ0KICAgIH0NDQoNDQogICAgLy/lhbPpl63miYDljaDnlKjnmoTotYTmupANDQogICAgZnVuY3Rpb24gQ2xvc2UoKQ0NCiAgICB7DQ0KICAgIH0NDQp9Ly9FbmQgQ2xhc3M=
</file>
<file type='file' name='../include/arc.archives.class_wap.php'>

</file>
<file type='file' name='../include/arc.listview.class_wap.php'>

</file>
<file type='file' name='../include/helpers/channelunit.helper.php'>
PD9waHAgIGlmKCFkZWZpbmVkKCdERURFSU5DJykpIGV4aXQoJ2RlZGVjbXMnKTsNCi8qKg0KICog5paH5qGj5bCP5Yqp5omLDQogKg0KICogQHZlcnNpb24gICAgICAgICRJZDogY2hhbm5lbHVuaXQuaGVscGVyLnBocCAxIDE2OjQ5IDIwMTDlubQ35pyINuaXpVogdGlhbnlhICQNCiAqIEBwYWNrYWdlICAgICAgICBEZWRlQ01TLkhlbHBlcnMNCiAqIEBjb3B5cmlnaHQgICAgICBDb3B5cmlnaHQgKGMpIDIwMDcgLSAyMDEwLCBEZXNEZXYsIEluYy4NCiAqIEBsaWNlbnNlICAgICAgICBodHRwOi8vaGVscC5kZWRlY21zLmNvbS91c2Vyc2d1aWRlL2xpY2Vuc2UuaHRtbA0KICogQGxpbmsgICAgICAgICAgIGh0dHA6Ly93d3cuZGVkZWNtcy5jb20NCiAqLw0KDQovKioNCiAqICDnlKjmmJ/ooajnpLrova/ku7bmiJZGbGFzaOeahOetiee6pw0KICoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkcmFuayAg5pif5pif5pWwDQogKiBAcmV0dXJuICAgIHN0cmluZw0KICovDQppZiAoICEgZnVuY3Rpb25fZXhpc3RzKCdHZXRSYW5rU3RhcicpKQ0Kew0KICAgIGZ1bmN0aW9uIEdldFJhbmtTdGFyKCRyYW5rKQ0KICAgIHsNCiAgICAgICAgJG5zdGFyID0gIiI7DQogICAgICAgIGZvcigkaT0xOyRpPD0kcmFuazskaSsrKQ0KICAgICAgICB7DQogICAgICAgICAgICAkbnN0YXIgLj0gIuKYhSI7DQogICAgICAgIH0NCiAgICAgICAgZm9yKCRpOyRpPD01OyRpKyspDQogICAgICAgIHsNCiAgICAgICAgICAgICRuc3RhciAuPSAi4piGIjsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gJG5zdGFyOw0KICAgIH0NCn0NCg0KLyoqDQogKiAg6I635b6X5paH56ug572R5Z2ADQogKiAg5aaC5p6c6KaB6I635b6X5paH5Lu255qE6Lev5b6E77yM55u05o6l55SoDQogKiAgR2V0RmlsZVVybCgkYWlkLCR0eXBlaWQsJHRpbWV0YWcsJHRpdGxlLCRpc21ha2UsJHJhbmssJG5hbWVydWxlLCR0eXBlZGlyLCRtb25leSkNCiAqICDljbPmmK/kuI3mjIflrprnq5nngrnlj4LmlbDliJnov5Tlm57nm7jlvZPlr7nmoLnnm67lvZXnmoTnnJ/lrp7ot6/lvoQNCiAqDQogKiBAcGFyYW0gICAgIGludCAgJGFpZCAg5paH5qGjSUQNCiAqIEBwYXJhbSAgICAgaW50ICAkdHlwZWlkICDmoI/nm65JRA0KICogQHBhcmFtICAgICBpbnQgICR0aW1ldGFnICDml7bpl7TmiLMNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdGl0bGUgIOagh+mimA0KICogQHBhcmFtICAgICBpbnQgICRpc21ha2UgIOaYr+WQpueUn+aIkA0KICogQHBhcmFtICAgICBpbnQgICRyYW5rICDpmIXor7vmnYPpmZANCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkbmFtZXJ1bGUgIOWQjeensOinhOWImQ0KICogQHBhcmFtICAgICBzdHJpbmcgICR0eXBlZGlyICDmoI/nm65kaXINCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkbW9uZXkgIOmcgOimgemHkeW4gQ0KICogQHBhcmFtICAgICBzdHJpbmcgICRmaWxlbmFtZSAg5paH5Lu25ZCN56ewDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJG1vcmVzaXRlICDlpJrnq5nngrkNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkc2l0ZXVybCAg56uZ54K55Zyw5Z2ADQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHNpdGVwYXRoICDnq5nngrnot6/lvoQNCiAqIEByZXR1cm4gICAgc3RyaW5nDQogKi8NCmlmICggISBmdW5jdGlvbl9leGlzdHMoJ0dldEZpbGVVcmwnKSkNCnsNCiAgICBmdW5jdGlvbiBHZXRGaWxlVXJsKCRhaWQsJHR5cGVpZCwkdGltZXRhZywkdGl0bGUsJGlzbWFrZT0wLCRyYW5rPTAsJG5hbWVydWxlPScnLCR0eXBlZGlyPScnLA0KICAgICRtb25leT0wLCAkZmlsZW5hbWU9JycsJG1vcmVzaXRlPTAsJHNpdGV1cmw9JycsJHNpdGVwYXRoPScnKQ0KICAgIHsNCiAgICAgICAgJGFydGljbGVVcmwgPSBHZXRGaWxlTmFtZSgkYWlkLCR0eXBlaWQsJHRpbWV0YWcsJHRpdGxlLCRpc21ha2UsJHJhbmssJG5hbWVydWxlLCR0eXBlZGlyLCRtb25leSwkZmlsZW5hbWUpOw0KICAgICAgICAkc2l0ZXBhdGggPSBNZlR5cGVkaXIoJHNpdGVwYXRoKTsNCg0KICAgICAgICAvL+aYr+WQpuW8uuWItuS9v+eUqOe7neWvuee9keWdgA0KICAgICAgICBpZigkR0xPQkFMU1snY2ZnX211bHRpX3NpdGUnXT09J1knKQ0KICAgICAgICB7DQogICAgICAgICAgICBpZigkc2l0ZXVybD09JycpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgJHNpdGV1cmwgPSAkR0xPQkFMU1snY2ZnX2Jhc2Vob3N0J107DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZigkbW9yZXNpdGU9PTEpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgJGFydGljbGVVcmwgPSBwcmVnX3JlcGxhY2UoIiNeIi4kc2l0ZXBhdGguJyMnLCAnJywgJGFydGljbGVVcmwpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYoIXByZWdfbWF0Y2goIi9odHRwOi8iLCAkYXJ0aWNsZVVybCkpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgJGFydGljbGVVcmwgPSAkc2l0ZXVybC4kYXJ0aWNsZVVybDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkYXJ0aWNsZVVybDsNCiAgICB9DQp9DQoNCi8qKg0KICogIOiOt+W+l+aWsOaWh+S7tuWQjSjmnKzlh73mlbDkvJroh6rliqjliJvlu7rnm67lvZUpDQogKg0KICogQHBhcmFtICAgICBpbnQgICRhaWQgIOaWh+aho0lEDQogKiBAcGFyYW0gICAgIGludCAgJHR5cGVpZCAg5qCP55uuSUQNCiAqIEBwYXJhbSAgICAgaW50ICAkdGltZXRhZyAg5pe26Ze05oizDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHRpdGxlICDmoIfpopgNCiAqIEBwYXJhbSAgICAgaW50ICAkaXNtYWtlICDmmK/lkKbnlJ/miJANCiAqIEBwYXJhbSAgICAgaW50ICAkcmFuayAg6ZiF6K+75p2D6ZmQDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJG5hbWVydWxlICDlkI3np7Dop4TliJkNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdHlwZWRpciAg5qCP55uuZGlyDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJG1vbmV5ICDpnIDopoHph5HluIENCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkZmlsZW5hbWUgIOaWh+S7tuWQjeensA0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KaWYgKCAhIGZ1bmN0aW9uX2V4aXN0cygnR2V0RmlsZU5ld05hbWUnKSkNCnsNCiAgICAgZnVuY3Rpb24gR2V0RmlsZU5ld05hbWUoJGFpZCwkdHlwZWlkLCR0aW1ldGFnLCR0aXRsZSwkaXNtYWtlPTAsJHJhbms9MCwkbmFtZXJ1bGU9JycsJHR5cGVkaXI9JycsJG1vbmV5PTAsJGZpbGVuYW1lPScnKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICRjZmdfYXJjX2Rpcm5hbWU7DQogICAgICAgICRhcnRpY2xlbmFtZSA9IEdldEZpbGVOYW1lKCRhaWQsJHR5cGVpZCwkdGltZXRhZywkdGl0bGUsJGlzbWFrZSwkcmFuaywkbmFtZXJ1bGUsJHR5cGVkaXIsJG1vbmV5LCRmaWxlbmFtZSk7DQogICAgICAgIA0KICAgICAgICBpZihwcmVnX21hdGNoKCIvXD8vIiwgJGFydGljbGVuYW1lKSkNCiAgICAgICAgew0KICAgICAgICAgICAgcmV0dXJuICRhcnRpY2xlbmFtZTsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgaWYoJGNmZ19hcmNfZGlybmFtZT09J1knICYmIHByZWdfbWF0Y2goIi9cLyQvIiwgJGFydGljbGVuYW1lKSkNCiAgICAgICAgew0KICAgICAgICAgICAgJGFydGljbGVuYW1lID0gJGFydGljbGVuYW1lLiJpbmRleC5odG1sIjsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgJHNsZW4gPSBzdHJsZW4oJGFydGljbGVuYW1lKS0xOw0KICAgICAgICBmb3IoJGk9JHNsZW47JGk+PTA7JGktLSkNCiAgICAgICAgew0KICAgICAgICAgICAgaWYoJGFydGljbGVuYW1lWyRpXT09Jy8nKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICRzdWJwb3MgPSAkaTsNCiAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAkb2tkaXIgPSBzdWJzdHIoJGFydGljbGVuYW1lLDAsJHN1YnBvcyk7DQogICAgICAgIENyZWF0ZURpcigkb2tkaXIpOw0KICAgICAgICByZXR1cm4gJGFydGljbGVuYW1lOw0KICAgIH0NCn0NCg0KDQoNCi8qKg0KICogIOiOt+W+l+aWh+S7tuebuOWvueS6juS4u+ermeeCueagueebruW9leeahOeJqeeQhuaWh+S7tuWQjSjliqjmgIHnvZHlnYDov5Tlm551cmwpDQogKg0KICogQHBhcmFtICAgICBpbnQgICRhaWQgIOaWh+aho0lEDQogKiBAcGFyYW0gICAgIGludCAgJHR5cGVpZCAg5qCP55uuSUQNCiAqIEBwYXJhbSAgICAgaW50ICAkdGltZXRhZyAg5pe26Ze05oizDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHRpdGxlICDmoIfpopgNCiAqIEBwYXJhbSAgICAgaW50ICAkaXNtYWtlICDmmK/lkKbnlJ/miJANCiAqIEBwYXJhbSAgICAgaW50ICAkcmFuayAg6ZiF6K+75p2D6ZmQDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJG5hbWVydWxlICDlkI3np7Dop4TliJkNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdHlwZWRpciAg5qCP55uuZGlyDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJG1vbmV5ICDpnIDopoHph5HluIENCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkZmlsZW5hbWUgIOaWh+S7tuWQjeensA0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KaWYgKCAhIGZ1bmN0aW9uX2V4aXN0cygnR2V0RmlsZU5hbWUnKSkNCnsNCiAgICBmdW5jdGlvbiBHZXRGaWxlTmFtZSgkYWlkLCR0eXBlaWQsJHRpbWV0YWcsJHRpdGxlLCRpc21ha2U9MCwkcmFuaz0wLCRuYW1lcnVsZT0nJywkdHlwZWRpcj0nJywkbW9uZXk9MCwkZmlsZW5hbWU9JycpDQogICAgew0KICAgICAgICBnbG9iYWwgJGNmZ19yZXdyaXRlLCAkY2ZnX2Ntc3BhdGgsICRjZmdfYXJjZGlyLCAkY2ZnX3NwZWNpYWwsICRjZmdfYXJjX2Rpcm5hbWU7DQogICAgICAgIC8v5rKh5oyH5a6a5qCP55uu5pe255So5Zu65a6a6KeE5YiZ77yI5LiT6aKY77yJDQogICAgICAgIGlmKGVtcHR5KCRuYW1lcnVsZSkpIHsNCiAgICAgICAgICAgICRuYW1lcnVsZSA9ICRjZmdfc3BlY2lhbC4nL2FyYy17YWlkfS5odG1sJzsNCiAgICAgICAgICAgICR0eXBlaWQgPSAtMTsNCiAgICAgICAgfQ0KICAgICAgICBpZigkcmFuayE9MCB8fCAkaXNtYWtlPT0tMSB8fCAkdHlwZWlkPT0wIHx8ICRtb25leT4wKQ0KICAgICAgICB7DQogICAgICAgICAgICAvL+WKqOaAgeaWh+eroA0KICAgICAgICAgICAgaWYoJGNmZ19yZXdyaXRlID09ICdZJykNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJEdMT0JBTFNbImNmZ19wbHVzX2RpciJdLiIvdmlldy0iLiRhaWQuJy0xLmh0bWwnOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIHJldHVybiAkR0xPQkFMU1snY2ZnX3BocHVybCddLiIvdmlldy5waHA/YWlkPSRhaWQiOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGVsc2UNCiAgICAgICAgew0KICAgICAgICAgICAgJGFydGljbGVEaXIgPSBNZlR5cGVkaXIoJHR5cGVkaXIpOw0KICAgICAgICAgICAgJGFydGljbGVSdWxlID0gc3RydG9sb3dlcigkbmFtZXJ1bGUpOw0KICAgICAgICAgICAgaWYoJGFydGljbGVSdWxlPT0nJykNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAkYXJ0aWNsZVJ1bGUgPSBzdHJ0b2xvd2VyKCRHTE9CQUxTWydjZmdfZGZfbmFtZXJ1bGUnXSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZigkdHlwZWRpcj09JycpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgJGFydGljbGVEaXIgID0gJEdMT0JBTFNbJ2NmZ19jbXNwYXRoJ10uJEdMT0JBTFNbJ2NmZ19hcmNkaXInXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICRkdGltZSA9IEdldERhdGVNaygkdGltZXRhZyk7DQogICAgICAgICAgICBsaXN0KCR5LCAkbSwgJGQpID0gZXhwbG9kZSgnLScsICRkdGltZSk7DQogICAgICAgICAgICAkYXJyX3Jwc291cmNlID0gYXJyYXkoJ3t0eXBlZGlyfScsJ3t5fScsJ3ttfScsJ3tkfScsJ3t0aW1lc3RhbXB9Jywne2FpZH0nLCd7Y2N9Jyk7DQogICAgICAgICAgICAkYXJyX3JwdmFsdWVzID0gYXJyYXkoJGFydGljbGVEaXIsJHksICRtLCAkZCwgJHRpbWV0YWcsICRhaWQsIGRkMmNoYXIoJG0uJGQuJGFpZC4keSkpOw0KICAgICAgICAgICAgaWYoJGZpbGVuYW1lICE9ICcnKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICRhcnRpY2xlUnVsZSA9IGRpcm5hbWUoJGFydGljbGVSdWxlKS4nLycuJGZpbGVuYW1lLiRHTE9CQUxTWydjZmdfZGZfZXh0J107DQogICAgICAgICAgICB9DQogICAgICAgICAgICAkYXJ0aWNsZVJ1bGUgPSBzdHJfcmVwbGFjZSgkYXJyX3Jwc291cmNlLCRhcnJfcnB2YWx1ZXMsJGFydGljbGVSdWxlKTsNCiAgICAgICAgICAgIGlmKHByZWdfbWF0Y2goIi9ce3AvIiwgJGFydGljbGVSdWxlKSkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAkYXJ0aWNsZVJ1bGUgPSBzdHJfcmVwbGFjZSgne3Bpbnlpbn0nLEdldFBpbnlpbigkdGl0bGUpLidfJy4kYWlkLCRhcnRpY2xlUnVsZSk7DQogICAgICAgICAgICAgICAgJGFydGljbGVSdWxlID0gc3RyX3JlcGxhY2UoJ3tweX0nLEdldFBpbnlpbigkdGl0bGUsMSkuJ18nLiRhaWQsJGFydGljbGVSdWxlKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICRhcnRpY2xlVXJsID0gJy8nLnByZWdfcmVwbGFjZSgiL15cLy8iLCAnJywgJGFydGljbGVSdWxlKTsNCiAgICAgICAgICAgIGlmKHByZWdfbWF0Y2goIi9pbmRleFwuaHRtbC8iLCAkYXJ0aWNsZVVybCkgJiYgJGNmZ19hcmNfZGlybmFtZT09J1knKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICRhcnRpY2xlVXJsID0gc3RyX3JlcGxhY2UoJ2luZGV4Lmh0bWwnLCAnJywgJGFydGljbGVVcmwpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuICRhcnRpY2xlVXJsOw0KICAgICAgICB9DQogICAgfQ0KfQ0KDQoNCi8qKg0KICogIOiOt+W+l+aMh+Wumuexu+ebrueahFVSTOmTvuaOpQ0KICogIOWvueS6juS9v+eUqOWwgemdouaWh+S7tuWSjOWNleeLrOmhtemdoueahOaDheWGte+8jOW8uuWItuS9v+eUqOm7mOiupOmhteWQjeensA0KICoNCiAqIEBwYXJhbSAgICAgaW50ICAkdHlwZWlkICDmoI/nm65JRA0KICogQHBhcmFtICAgICBzdHJpbmcgICR0eXBlZGlyICDmoI/nm67nm67lvZUNCiAqIEBwYXJhbSAgICAgaW50ICAkaXNkZWZhdWx0ICDmmK/lkKbpu5jorqQNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkZGVmYXVsdG5hbWUgIOm7mOiupOWQjeensA0KICogQHBhcmFtICAgICBpbnQgICRpc3BhcnQgIOagj+ebruWxnuaApw0KICogQHBhcmFtICAgICBzdHJpbmcgICRuYW1lcnVsZTIgIOWQjeensOinhOWImQ0KICogQHBhcmFtICAgICBzdHJpbmcgICRtb3Jlc2l0ZSAg5aSa56uZ54K5DQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHNpdGV1cmwgIOermeeCueWcsOWdgA0KICogQHBhcmFtICAgICBzdHJpbmcgICRzaXRlcGF0aCAg56uZ54K555uu5b2VDQogKiBAcmV0dXJuICAgIHN0cmluZw0KICovDQppZiAoICEgZnVuY3Rpb25fZXhpc3RzKCdHZXRUeXBlVXJsJykpDQp7DQogICAgZnVuY3Rpb24gR2V0VHlwZVVybCgkdHlwZWlkLCR0eXBlZGlyLCRpc2RlZmF1bHQsJGRlZmF1bHRuYW1lLCRpc3BhcnQsJG5hbWVydWxlMiwkbW9yZXNpdGU9MCwkc2l0ZXVybD0nJywkc2l0ZXBhdGg9JycpDQogICAgew0KICAgICAgICBnbG9iYWwgJGNmZ190eXBlZGlyX2RmOw0KICAgICAgICAkdHlwZWRpciA9IE1mVHlwZWRpcigkdHlwZWRpcik7DQogICAgICAgICRzaXRlcGF0aCA9IE1mVHlwZWRpcigkc2l0ZXBhdGgpOw0KICAgICAgICBpZigkaXNkZWZhdWx0PT0tMSkNCiAgICAgICAgew0KICAgICAgICAgICAgLy/liqjmgIENCiAgICAgICAgICAgICRyZXVybCA9ICRHTE9CQUxTWydjZmdfcGhwdXJsJ10uIi9saXN0LnBocD90aWQ9Ii4kdHlwZWlkOw0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYoJGlzcGFydD09MikNCiAgICAgICAgew0KICAgICAgICAgICAgLy/ot7PovaznvZHlnYANCiAgICAgICAgICAgICRyZXVybCA9ICR0eXBlZGlyOw0KICAgICAgICAgICAgcmV0dXJuICRyZXVybDsNCiAgICAgICAgfQ0KICAgICAgICBlbHNlDQogICAgICAgIHsNCiAgICAgICAgICAgIGlmKCRpc2RlZmF1bHQ9PTAgJiYgJGlzcGFydD09MCkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAkcmV1cmwgPSBzdHJfcmVwbGFjZSgie3BhZ2V9IiwiMSIsJG5hbWVydWxlMik7DQogICAgICAgICAgICAgICAgJHJldXJsID0gc3RyX3JlcGxhY2UoInt0aWR9IiwkdHlwZWlkLCRyZXVybCk7DQogICAgICAgICAgICAgICAgJHJldXJsID0gc3RyX3JlcGxhY2UoInt0eXBlZGlyfSIsJHR5cGVkaXIsJHJldXJsKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBpZigkY2ZnX3R5cGVkaXJfZGY9PSdOJyB8fCAkaXNkZWZhdWx0PT0wKSAkcmV1cmwgPSAkdHlwZWRpci4nLycuJGRlZmF1bHRuYW1lOw0KICAgICAgICAgICAgICAgIGVsc2UgJHJldXJsID0gJHR5cGVkaXIuJy8nOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgaWYoICFwcmVnX21hdGNoKCIvXmh0dHA6XC9cLy8iLCRyZXVybCkgKSB7DQogICAgICAgICAgICAkcmV1cmwgPSBwcmVnX3JlcGxhY2UoIi9cL3sxLH0vaSIsICcvJywgJHJldXJsKTsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgaWYoJEdMT0JBTFNbJ2NmZ19tdWx0aV9zaXRlJ109PSdZJykNCiAgICAgICAgew0KICAgICAgICAgICAgaWYoJHNpdGV1cmw9PScnKSB7DQogICAgICAgICAgICAgICAgJHNpdGV1cmwgPSAkR0xPQkFMU1snY2ZnX2Jhc2Vob3N0J107DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZigkbW9yZXNpdGU9PTEgKSB7DQogICAgICAgICAgICAgICAgJHJldXJsID0gcHJlZ19yZXBsYWNlKCIjXiIuJHNpdGVwYXRoLiIjIiwgJycsICRyZXVybCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiggIXByZWdfbWF0Y2goIi9eaHR0cDpcL1wvLyIsICRyZXVybCkgKSB7DQogICAgICAgICAgICAgICAgJHJldXJsID0gJHNpdGV1cmwuJHJldXJsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHJldHVybiAkcmV1cmw7DQogICAgfQ0KfQ0KDQovKioNCiAqICDprZTms5Xlj5jph4/vvIznlKjkuo7ojrflj5bkuKTkuKrlj6/lj5jnmoTlgLwNCiAqDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHYxICDnrKzkuIDkuKrlj5jph48NCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdjIgIOesrOS6jOS4quWPmOmHjw0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KaWYgKCAhIGZ1bmN0aW9uX2V4aXN0cygnTWFnaWNWYXInKSkNCnsNCiAgICBmdW5jdGlvbiBNYWdpY1ZhcigkdjEsJHYyKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICRHTE9CQUxTWydhdXRvaW5kZXgnXSUyPT0wID8gJHYxIDogJHYyOw0KICAgIH0NCn0NCg0KLyoqDQogKiAg6I635Y+W5p+Q5Liq57G755uu55qE5omA5pyJ5LiK57qn5qCP55uuaWQNCiAqDQogKiBAcGFyYW0gICAgIGludCAgJHRpZCAg5qCP55uuSUQNCiAqIEByZXR1cm4gICAgc3RyaW5nDQogKi8NCmlmICggISBmdW5jdGlvbl9leGlzdHMoJ0dldFRvcGlkcycpKQ0Kew0KICAgIGZ1bmN0aW9uIEdldFRvcGlkcygkdGlkKQ0KICAgIHsNCiAgICAgICAgJGFyciA9IEdldFBhcmVudElkcygkdGlkKTsNCiAgICAgICAgcmV0dXJuIGpvaW4oJywnLCRhcnIpOw0KICAgIH0NCn0NCg0KDQoNCi8qKg0KICogIOiOt+WPluS4iue6p0lE5YiX6KGoDQogKg0KICogQGFjY2VzcyAgICBwdWJsaWMNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdGlkICDmoI/nm65JRA0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KaWYgKCAhIGZ1bmN0aW9uX2V4aXN0cygnR2V0UGFyZW50SWRzJykpDQp7DQogICAgZnVuY3Rpb24gR2V0UGFyZW50SWRzKCR0aWQpDQogICAgew0KICAgICAgICBnbG9iYWwgJGNmZ19DczsNCiAgICAgICAgJEdMT0JBTFNbJ3BUeXBlQXJyYXlzJ11bXSA9ICR0aWQ7DQogICAgICAgIGlmKCFpc19hcnJheSgkY2ZnX0NzKSkNCiAgICAgICAgew0KICAgICAgICAgICAgcmVxdWlyZV9vbmNlKERFREVEQVRBLiIvY2FjaGUvaW5jX2NhdGFsb2dfYmFzZS5pbmMiKTsNCiAgICAgICAgfQ0KICAgICAgICBpZighaXNzZXQoJGNmZ19Dc1skdGlkXSkgfHwgJGNmZ19Dc1skdGlkXVswXT09MCkNCiAgICAgICAgew0KICAgICAgICAgICAgcmV0dXJuICRHTE9CQUxTWydwVHlwZUFycmF5cyddOw0KICAgICAgICB9DQogICAgICAgIGVsc2UNCiAgICAgICAgew0KICAgICAgICAgICAgcmV0dXJuIEdldFBhcmVudElkcygkY2ZnX0NzWyR0aWRdWzBdKTsNCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KDQovKioNCiAqICDmo4DmtYvmoI/nm67mmK/lkKbmmK/lj6bkuIDkuKrmoI/nm67nmoTniLbnm67lvZUNCiAqDQogKiBAYWNjZXNzICAgIHB1YmxpYw0KICogQHBhcmFtICAgICBzdHJpbmcgICRzaWQgIOmhtue6p+ebruW9lWlkDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHBpZCAg5LiL57qn55uu5b2VaWQNCiAqIEByZXR1cm4gICAgYm9vbA0KICovDQppZiAoICEgZnVuY3Rpb25fZXhpc3RzKCdJc1BhcmVudCcpKQ0Kew0KICAgIGZ1bmN0aW9uIElzUGFyZW50KCRzaWQsICRwaWQpDQogICAgew0KICAgICAgICAkcFR5cGVBcnJheXMgPSBHZXRQYXJlbnRJZHMoJHNpZCk7DQogICAgICAgIHJldHVybiBpbl9hcnJheSgkcGlkLCAkcFR5cGVBcnJheXMpOw0KICAgIH0NCn0NCg0KDQovKioNCiAqICDojrflj5bkuIDkuKrnsbvnm67nmoTpobbnuqfnsbvnm65pZA0KICoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdGlkICDmoI/nm65JRA0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KaWYgKCAhIGZ1bmN0aW9uX2V4aXN0cygnR2V0VG9waWQnKSkNCnsNCiAgICBmdW5jdGlvbiBHZXRUb3BpZCgkdGlkKQ0KICAgIHsNCiAgICAgICAgZ2xvYmFsICRjZmdfQ3M7DQogICAgICAgIGlmKCFpc19hcnJheSgkY2ZnX0NzKSkNCiAgICAgICAgew0KICAgICAgICAgICAgcmVxdWlyZV9vbmNlKERFREVEQVRBLiIvY2FjaGUvaW5jX2NhdGFsb2dfYmFzZS5pbmMiKTsNCiAgICAgICAgfQ0KICAgICAgICBpZighaXNzZXQoJGNmZ19Dc1skdGlkXVswXSkgfHwgJGNmZ19Dc1skdGlkXVswXT09MCkNCiAgICAgICAgew0KICAgICAgICAgICAgcmV0dXJuICR0aWQ7DQogICAgICAgIH0NCiAgICAgICAgZWxzZQ0KICAgICAgICB7DQogICAgICAgICAgICByZXR1cm4gR2V0VG9waWQoJGNmZ19Dc1skdGlkXVswXSk7DQogICAgICAgIH0NCiAgICB9DQp9DQoNCg0KLyoqDQogKiAg6I635b6X5p+QaWTnmoTmiYDmnInkuIvnuqdpZA0KICoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkaWQgIOagj+ebrmlkDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJGNoYW5uZWwgIOaooeWei0lEDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJGFkZHRoaXMgIOaYr+WQpuWMheWQq+acrOi6qw0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KZnVuY3Rpb24gR2V0U29uSWRzKCRpZCwkY2hhbm5lbD0wLCRhZGR0aGlzPXRydWUpDQp7DQogICAgZ2xvYmFsICRjZmdfQ3M7DQogICAgJEdMT0JBTFNbJ2lkQXJyYXknXSA9IGFycmF5KCk7DQogICAgaWYoICFpc19hcnJheSgkY2ZnX0NzKSApDQogICAgew0KICAgICAgICByZXF1aXJlX29uY2UoREVERURBVEEuIi9jYWNoZS9pbmNfY2F0YWxvZ19iYXNlLmluYyIpOw0KICAgIH0NCiAgICBHZXRTb25JZHNMb2dpYygkaWQsJGNmZ19DcywkY2hhbm5lbCwkYWRkdGhpcyk7DQogICAgJHJxdWVyeSA9IGpvaW4oJywnLCRHTE9CQUxTWydpZEFycmF5J10pOw0KICAgICRycXVlcnkgPSBwcmVnX3JlcGxhY2UoIi8sJC8iLCAnJywgJHJxdWVyeSk7IA0KICAgIHJldHVybiAkcnF1ZXJ5Ow0KfQ0KDQovL+mAkuW9kumAu+i+kQ0KZnVuY3Rpb24gR2V0U29uSWRzTG9naWMoJGlkLCRzQXJyLCRjaGFubmVsPTAsJGFkZHRoaXM9ZmFsc2UpDQp7DQogICAgaWYoJGlkIT0wICYmICRhZGR0aGlzKQ0KICAgIHsNCiAgICAgICAgJEdMT0JBTFNbJ2lkQXJyYXknXVskaWRdID0gJGlkOw0KICAgIH0NCiAgICBpZihpc19hcnJheSgkc0FycikpDQogICAgew0KICAgICAgICBmb3JlYWNoKCRzQXJyIGFzICRrPT4kdikNCiAgICAgICAgew0KICAgICAgICAgICAgaWYoICR2WzBdPT0kaWQgJiYgKCRjaGFubmVsPT0wIHx8ICR2WzFdPT0kY2hhbm5lbCApKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIEdldFNvbklkc0xvZ2ljKCRrLCRzQXJyLCRjaGFubmVsLHRydWUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KfQ0KDQovKioNCiAqICDmoI/nm67nm67lvZXop4TliJkNCiAqDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHR5cGVkaXIgICDmoI/nm67nm67lvZUNCiAqIEByZXR1cm4gICAgc3RyaW5nDQogKi8NCmZ1bmN0aW9uIE1mVHlwZWRpcigkdHlwZWRpcikNCnsNCiAgICBpZihwcmVnX21hdGNoKCIvXmh0dHA6fF5mdHA6L2kiLCAkdHlwZWRpcikpIHJldHVybiAkdHlwZWRpcjsNCiAgICAkdHlwZWRpciA9IHN0cl9yZXBsYWNlKCJ7Y21zcGF0aH0iLCRHTE9CQUxTWydjZmdfY21zcGF0aCddLCR0eXBlZGlyKTsNCiAgICAkdHlwZWRpciA9IHByZWdfcmVwbGFjZSgiL1wvezEsfS8iLCAiLyIsICR0eXBlZGlyKTsNCiAgICByZXR1cm4gJHR5cGVkaXI7DQp9DQoNCi8qKg0KICogIOaooeadv+ebruW9leinhOWImQ0KICoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdG1wZGlyICDmqKHmnb/nm67lvZUNCiAqIEByZXR1cm4gICAgc3RyaW5nDQogKi8NCmZ1bmN0aW9uIE1mVGVtcGxldCgkdG1wZGlyKQ0Kew0KICAgICR0bXBkaXIgPSBzdHJfcmVwbGFjZSgie3N0eWxlfSIsICRHTE9CQUxTWydjZmdfZGZfc3R5bGUnXSwgJHRtcGRpcik7DQogICAgJHRtcGRpciA9IHByZWdfcmVwbGFjZSgiL1wvezEsfS8iLCAiLyIsICR0bXBkaXIpOw0KICAgIHJldHVybiAkdG1wZGlyOw0KfQ0KDQovKioNCiAqICDmuIXpmaTnlKjkuo5qc+eahOepuueZveWdlw0KICoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkYXRtZSAg5a2X56ymDQogKiBAcmV0dXJuICAgIHN0cmluZw0KICovDQpmdW5jdGlvbiBGb3JtYXRTY3JpcHQoJGF0bWUpDQp7DQogICAgcmV0dXJuICRhdG1lPT0nJm5ic3A7JyA/ICcnIDogJGF0bWU7DQp9DQoNCi8qKg0KICogIOe7meWxnuaAp+m7mOiupOWAvA0KICoNCiAqIEBwYXJhbSAgICAgYXJyYXkgICRhdHRzICDlsZ7mgKcNCiAqIEBwYXJhbSAgICAgYXJyYXkgICRhdHRsaXN0ICDlsZ7mgKfliJfooagNCiAqIEByZXR1cm4gICAgc3RyaW5nDQogKi8NCmZ1bmN0aW9uIEZpbGxBdHRzRGVmYXVsdCgmJGF0dHMsICRhdHRsaXN0KQ0Kew0KICAgICRhdHRsaXN0cyA9IGV4cGxvZGUoJywnLCAkYXR0bGlzdCk7DQogICAgZm9yKCRpPTA7IGlzc2V0KCRhdHRsaXN0c1skaV0pOyAkaSsrKQ0KICAgIHsNCiAgICAgICAgbGlzdCgkaywgJHYpID0gZXhwbG9kZSgnfCcsICRhdHRsaXN0c1skaV0pOw0KICAgICAgICBpZighaXNzZXQoJGF0dHNbJGtdKSkNCiAgICAgICAgew0KICAgICAgICAgICAgJGF0dHNbJGtdID0gJHY7DQogICAgICAgIH0NCiAgICB9DQp9DQoNCi8qKg0KICogIOe7meWdl+agh+iusOi1i+WAvA0KICoNCiAqIEBwYXJhbSAgICAgb2JqZWN0ICAkZHRwICDmqKHmnb/op6PmnpDlvJXmk44NCiAqIEBwYXJhbSAgICAgb2JqZWN0ICAkcmVmT2JqICDlrp7kvovljJblr7nosaENCiAqIEBwYXJhbSAgICAgb2JqZWN0ICAkcGFyZmllbGQNCiAqIEByZXR1cm4gICAgc3RyaW5nDQogKi8NCmZ1bmN0aW9uIE1ha2VPbmVUYWcoJiRkdHAsICYkcmVmT2JqLCAkcGFyZmllbGQ9J1knKQ0Kew0KICAgIGdsb2JhbCAkY2ZnX2Rpc2FibGVfdGFnczsNCiAgICAkY2ZnX2Rpc2FibGVfdGFncyA9IGlzc2V0KCRjZmdfZGlzYWJsZV90YWdzKT8gJGNmZ19kaXNhYmxlX3RhZ3MgOiAncGhwJzsNCiAgICAkZGlzYWJsZV90YWdzID0gZXhwbG9kZSgnLCcsICRjZmdfZGlzYWJsZV90YWdzKTsNCiAgICAkYWxsdGFncyA9IGFycmF5KCk7DQogICAgJGR0cC0+c2V0UmVmT2JqKCRyZWZPYmopOw0KICAgIC8v6K+75Y+W6Ieq55Sx6LCD55SodGFn5YiX6KGoDQogICAgJGRoID0gZGlyKERFREVJTkMuJy90YWdsaWInKTsNCiAgICB3aGlsZSgkZmlsZW5hbWUgPSAkZGgtPnJlYWQoKSkNCiAgICB7DQogICAgICAgIGlmKHByZWdfbWF0Y2goIi9cLmxpYlwuLyIsICRmaWxlbmFtZSkpDQogICAgICAgIHsNCiAgICAgICAgICAgICRhbGx0YWdzW10gPSBzdHJfcmVwbGFjZSgnLmxpYi5waHAnLCcnLCRmaWxlbmFtZSk7DQogICAgICAgIH0NCiAgICB9DQogICAgJGRoLT5DbG9zZSgpOw0KDQogICAgLy/pgY3ljoZ0YWflhYPntKANCiAgICBpZighaXNfYXJyYXkoJGR0cC0+Q1RhZ3MpKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICcnOw0KICAgIH0NCiAgICBmb3JlYWNoKCRkdHAtPkNUYWdzIGFzICR0YWdpZD0+JGN0YWcpDQogICAgew0KICAgICAgICAkdGFnbmFtZSA9ICRjdGFnLT5HZXROYW1lKCk7DQogICAgICAgIGlmKCR0YWduYW1lPT0nZmllbGQnICYmICRwYXJmaWVsZD09J1knKQ0KICAgICAgICB7DQogICAgICAgICAgICAkdm5hbWUgPSAkY3RhZy0+R2V0QXR0KCduYW1lJyk7DQogICAgICAgICAgICBpZiggJHZuYW1lPT0nYXJyYXknICYmIGlzc2V0KCRyZWZPYmotPkZpZWxkcykgKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICRkdHAtPkFzc2lnbigkdGFnaWQsJHJlZk9iai0+RmllbGRzKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UgaWYoaXNzZXQoJHJlZk9iai0+RmllbGRzWyR2bmFtZV0pKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICRkdHAtPkFzc2lnbigkdGFnaWQsJHJlZk9iai0+RmllbGRzWyR2bmFtZV0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSBpZigkY3RhZy0+R2V0QXR0KCdub3RlaWQnKSAhPSAnJykNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBpZiggaXNzZXQoJHJlZk9iai0+RmllbGRzWyR2bmFtZS4nXycuJGN0YWctPkdldEF0dCgnbm90ZWlkJyldKSApDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAkZHRwLT5Bc3NpZ24oJHRhZ2lkLCAkcmVmT2JqLT5GaWVsZHNbJHZuYW1lLidfJy4kY3RhZy0+R2V0QXR0KCdub3RlaWQnKV0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICB9DQoNCiAgICAgICAgLy/nlLHkuo7ogIPomZHlhbzlrrnmgKfvvIzljp/mnaXmlofnq6DosIPnlKjkvb/nlKjnmoTmoIforrDliKvlkI3nu5/kuIDkv53nlZnvvIzov5nkupvmoIforrDlrp7pmYXosIPnlKjnmoTop6PmnpDmlofku7bkuLppbmNfYXJjbGlzdC5waHANCiAgICAgICAgaWYocHJlZ19tYXRjaCgiL14oYXJ0bGlzdHxsaWtlYXJ0fGhvdGFydHxpbWdsaXN0fGltZ2luZm9saXN0fGNvb2xhcnR8c3BlY2FydHxhdXRvbGlzdCkkLyIsICR0YWduYW1lKSkNCiAgICAgICAgew0KICAgICAgICAgICAgJHRhZ25hbWU9J2FyY2xpc3QnOw0KICAgICAgICB9DQogICAgICAgIGlmKCR0YWduYW1lPT0nZnJpZW5kbGluaycpDQogICAgICAgIHsNCiAgICAgICAgICAgICR0YWduYW1lPSdmbGluayc7DQogICAgICAgIH0NCiAgICAgICAgaWYoaW5fYXJyYXkoJHRhZ25hbWUsJGFsbHRhZ3MpKQ0KICAgICAgICB7DQogICAgICAgICAgICBpZihpbl9hcnJheSgkdGFnbmFtZSwgJGRpc2FibGVfdGFncykpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgaWYoREVCVUdfTEVWRUwpIGVjaG8gJ0RlZGVDTVMgRXJyb3I6VGFnIGRpc2FibGVkOiInLiR0YWduYW1lLiciIDxhIGhyZWY9Imh0dHA6Ly9oZWxwLmRlZGVjbXMuY29tL2luc3RhbGwtdXNlL2FwcGx5LzIwMTMvMDcxMS8yMzI0Lmh0bWwiIHRhcmdldD0iX2JsYW5rIj5tb3JlLi4uPC9hPiEnOw0KICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKERFQlVHX0xFVkVMPT1UUlVFKSB7DQogICAgICAgICAgICAgICAgJHR0dDEgPSBFeGVjVGltZSgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgJGZpbGVuYW1lID0gREVERUlOQy4nL3RhZ2xpYi8nLiR0YWduYW1lLicubGliLnBocCc7DQogICAgICAgICAgICBpbmNsdWRlX29uY2UoJGZpbGVuYW1lKTsNCiAgICAgICAgICAgICRmdW5jbmFtZSA9ICdsaWJfJy4kdGFnbmFtZTsNCiAgICAgICAgICAgICRkdHAtPkFzc2lnbigkdGFnaWQsJGZ1bmNuYW1lKCRjdGFnLCRyZWZPYmopKTsNCiAgICAgICAgICAgIGlmIChERUJVR19MRVZFTD09VFJVRSkgew0KICAgICAgICAgICAgICAgICRxdWVyeVRpbWUgPSBFeGVjVGltZSgpIC0gJHR0dDE7DQogICAgICAgICAgICAgICAgZWNobyAn5qCH562+77yaJy4kdGFnbmFtZS4n6L295YWl6Iqx6LS55pe26Ze077yaJy4kcXVlcnlUaW1lLiI8YnIgLz5cclxuIjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KLyoqDQogKiAg6I635Y+W5p+Q5qCP55uu55qEdXJsDQogKg0KICogQHBhcmFtICAgICBhcnJheSAgJHR5cGVpbmZvcyAg5qCP55uu5L+h5oGvDQogKiBAcmV0dXJuICAgIHN0cmluZw0KICovDQpmdW5jdGlvbiBHZXRPbmVUeXBlVXJsQSgkdHlwZWluZm9zKQ0Kew0KICAgIHJldHVybiBHZXRUeXBlVXJsKCR0eXBlaW5mb3NbJ2lkJ10sTWZUeXBlZGlyKCR0eXBlaW5mb3NbJ3R5cGVkaXInXSksJHR5cGVpbmZvc1snaXNkZWZhdWx0J10sJHR5cGVpbmZvc1snZGVmYXVsdG5hbWUnXSwNCiAgICAkdHlwZWluZm9zWydpc3BhcnQnXSwkdHlwZWluZm9zWyduYW1lcnVsZTInXSwkdHlwZWluZm9zWydtb3Jlc2l0ZSddLCR0eXBlaW5mb3NbJ3NpdGV1cmwnXSwkdHlwZWluZm9zWydzaXRlcGF0aCddKTsNCn0NCg0KLyoqDQogKiAg6K6+572u5YWo5bGA546v5aKD5Y+Y6YePDQogKg0KICogQHBhcmFtICAgICBpbnQgICR0eXBlaWQgIOagj+ebrklEDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHR5cGVuYW1lICDmoI/nm67lkI3np7ANCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkYWlkICDmlofmoaNJRA0KICogQHBhcmFtICAgICBzdHJpbmcgICR0aXRsZSAg5qCH6aKYDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJGN1cmZpbGUgIOW9k+WJjeaWh+S7tg0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KZnVuY3Rpb24gU2V0U3lzRW52KCR0eXBlaWQ9MCwkdHlwZW5hbWU9JycsJGFpZD0wLCR0aXRsZT0nJywkY3VyZmlsZT0nJykNCnsNCiAgICBnbG9iYWwgJF9zeXNfZ2xvYmFsczsNCiAgICBpZihlbXB0eSgkX3N5c19nbG9iYWxzWydjdXJmaWxlJ10pKQ0KICAgIHsNCiAgICAgICAgJF9zeXNfZ2xvYmFsc1snY3VyZmlsZSddID0gJGN1cmZpbGU7DQogICAgfQ0KICAgIGlmKGVtcHR5KCRfc3lzX2dsb2JhbHNbJ3R5cGVpZCddKSkNCiAgICB7DQogICAgICAgICRfc3lzX2dsb2JhbHNbJ3R5cGVpZCddID0gJHR5cGVpZDsNCiAgICB9DQogICAgaWYoZW1wdHkoJF9zeXNfZ2xvYmFsc1sndHlwZW5hbWUnXSkpDQogICAgew0KICAgICAgICAkX3N5c19nbG9iYWxzWyd0eXBlbmFtZSddID0gJHR5cGVuYW1lOw0KICAgIH0NCiAgICBpZihlbXB0eSgkX3N5c19nbG9iYWxzWydhaWQnXSkpDQogICAgew0KICAgICAgICAkX3N5c19nbG9iYWxzWydhaWQnXSA9ICRhaWQ7DQogICAgfQ0KfQ0KDQovKioNCiAqICDojrflvpflm77kuabnmoRVUkwNCiAqDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJGJpZCAg5Lmm57GNSUQNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdGl0bGUgIOagh+mimA0KICogQHBhcmFtICAgICBzdHJpbmcgICRnZGlyDQogKiBAcmV0dXJuICAgIHN0cmluZw0KICovDQpmdW5jdGlvbiBHZXRCb29rVXJsKCRiaWQsJHRpdGxlLCRnZGlyPTApDQp7DQogICAgZ2xvYmFsICRjZmdfY21zcGF0aDsNCiAgICAkYm9va3VybCA9ICRnZGlyPT0xID8NCiAgICAieyRjZmdfY21zcGF0aH0vYm9vay8iLkRlZGVJRDJEaXIoJGJpZCkgOiAieyRjZmdfY21zcGF0aH0vYm9vay8iLkRlZGVJRDJEaXIoJGJpZCkuJy8nLkdldFBpbnlpbigkdGl0bGUpLictJy4kYmlkLicuaHRtbCc7DQogICAgcmV0dXJuICRib29rdXJsOw0KfQ0KDQovKioNCiAqICDmoLnmja5JROeUn+aIkOebruW9lQ0KICoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkYWlkICDlhoXlrrlJRA0KICogQHJldHVybiAgICBpbnQNCiAqLw0KZnVuY3Rpb24gRGVkZUlEMkRpcigkYWlkKQ0Kew0KICAgICRuID0gY2VpbCgkYWlkIC8gMTAwMCk7DQogICAgcmV0dXJuICRuOw0KfQ0KDQovKioNCiAqICDojrflvpfoh6rnlLHliJfooajnmoTnvZHlnYANCiAqDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJGxpZCAg5YiX6KGoaWQNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkbmFtZXJ1bGUgIOWRveWQjeinhOWImQ0KICogQHBhcmFtICAgICBzdHJpbmcgICRsaXN0ZGlyICDliJfooajnm67lvZUNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkZGVmYXVsdHBhZ2UgIOm7mOiupOmhtemdog0KICogQHBhcmFtICAgICBzdHJpbmcgICRub2RlZmF1bHQgIOayoeaciem7mOiupOmhtemdog0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KZnVuY3Rpb24gR2V0RnJlZUxpc3RVcmwoJGxpZCwkbmFtZXJ1bGUsJGxpc3RkaXIsJGRlZmF1bHRwYWdlLCRub2RlZmF1bHQpew0KICAgICRsaXN0ZGlyID0gc3RyX3JlcGxhY2UoJ3tjbXNwYXRofScsJEdMT0JBTFNbJ2NmZ19jbXNwYXRoJ10sJGxpc3RkaXIpOw0KICAgIGlmKCRub2RlZmF1bHQ9PTEpDQogICAgew0KICAgICAgICAkb2tmaWxlID0gc3RyX3JlcGxhY2UoJ3twYWdlfScsJzEnLCRuYW1lcnVsZSk7DQogICAgICAgICRva2ZpbGUgPSBzdHJfcmVwbGFjZSgne2xpc3RpZH0nLCRsaWQsJG9rZmlsZSk7DQogICAgICAgICRva2ZpbGUgPSBzdHJfcmVwbGFjZSgne2xpc3RkaXJ9JywkbGlzdGRpciwkb2tmaWxlKTsNCiAgICB9DQogICAgZWxzZQ0KICAgIHsNCiAgICAgICAgJG9rZmlsZSA9ICRHTE9CQUxTWydjZmdfcGhwdXJsJ10uIi9mcmVlbGlzdC5waHA/bGlkPSRsaWQiOw0KICAgICAgICByZXR1cm4gJG9rZmlsZTsNCiAgICB9DQogICAgJG9rZmlsZSA9IHN0cl9yZXBsYWNlKCJcXCIsIi8iLCRva2ZpbGUpOw0KICAgICRva2ZpbGUgPSBzdHJfcmVwbGFjZSgiLy8iLCIvIiwkb2tmaWxlKTsNCiAgICAkdHJ1ZUZpbGUgPSAkR0xPQkFMU1snY2ZnX2Jhc2VkaXInXS4kb2tmaWxlOw0KICAgIGlmKCFAZmlsZV9leGlzdHMoJHRydWVGaWxlKSkNCiAgICB7DQogICAgICAgICRva2ZpbGUgPSAkR0xPQkFMU1snY2ZnX3BocHVybCddLiIvZnJlZWxpc3QucGhwP2xpZD0kbGlkIjsNCiAgICB9DQogICAgcmV0dXJuICRva2ZpbGU7DQp9DQoNCi8qKg0KICogIOiOt+WPlue9keermeaQnOe0oueahOeDremXqOWFs+mUruWtlw0KICoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkZHNxbA0KICogQHBhcmFtICAgICBzdHJpbmcgICRudW0gIOiOt+WPluaVsOebrg0KICogQHBhcmFtICAgICBzdHJpbmcgICRuZGF5ICDlpKnmlbANCiAqIEBwYXJhbSAgICAgc3RyaW5nICAka2xlbiDlhbPplK7or43lrZfmlbANCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkb3JkZXJieSDmjpLliJfpobrluo8NCiAqIEByZXR1cm4gICAgc3RyaW5nDQogKi8NCmZ1bmN0aW9uIEdldEhvdEtleXdvcmRzKCYkZHNxbCwkbnVtPTgsJG5kYXk9MzY1LCRrbGVuPTE2LCRvcmRlcmJ5PSdjb3VudCcpDQp7DQogICAgZ2xvYmFsICRjZmdfcGhwdXJsLCRjZmdfY21zcGF0aDsNCiAgICAkbm93dGltZSA9IHRpbWUoKTsNCiAgICAkbnVtID0gQGludHZhbCgkbnVtKTsNCiAgICAkbmRheSA9IEBpbnR2YWwoJG5kYXkpOw0KICAgICRrbGVuID0gQGludHZhbCgka2xlbik7DQogICAgaWYoZW1wdHkoJG5kYXkpKQ0KICAgIHsNCiAgICAgICAgJG5kYXkgPSAzNjU7DQogICAgfQ0KICAgIGlmKGVtcHR5KCRudW0pKQ0KICAgIHsNCiAgICAgICAgJG51bSA9IDY7DQogICAgfQ0KICAgIGlmKGVtcHR5KCRrbGVuKSkNCiAgICB7DQogICAgICAgICRrbGVuID0gMTY7DQogICAgfQ0KICAgICRrbGVuID0gJGtsZW4rMTsNCiAgICAkbWludGltZSA9ICRub3d0aW1lIC0gKCRuZGF5ICogMjQgKiAzNjAwKTsNCiAgICBpZihlbXB0eSgkb3JkZXJieSkpDQogICAgew0KICAgICAgICAkb3JkZXJieSA9ICdjb3VudCc7DQogICAgfQ0KICAgICRkc3FsLT5TZXRRdWVyeSgiU0VMRUNUIGtleXdvcmQgRlJPTSAjQF9fc2VhcmNoX2tleXdvcmRzIFdIRVJFIGxhc3R0aW1lPiRtaW50aW1lIEFORCBsZW5ndGgoa2V5d29yZCk8JGtsZW4gT1JERVIgQlkgJG9yZGVyYnkgREVTQyBMSU1JVCAwLCRudW0iKTsNCiAgICAkZHNxbC0+RXhlY3V0ZSgnaHcnKTsNCiAgICAkaG90d29yZCA9ICIiOw0KICAgIHdoaWxlKCRyb3c9JGRzcWwtPkdldEFycmF5KCdodycpKQ0KICAgIHsNCiAgICAgICAgJGhvdHdvcmQgLj0gIuOAgDxhIGhyZWY9JyIuJGNmZ19waHB1cmwuIi9zZWFyY2gucGhwP2tleXdvcmQ9Ii51cmxlbmNvZGUoJHJvd1sna2V5d29yZCddKS4iJnNlYXJjaHR5cGU9dGl0bGVrZXl3b3JkJz4iLiRyb3dbJ2tleXdvcmQnXS4iPC9hPiAiOw0KICAgIH0NCiAgICByZXR1cm4gJGhvdHdvcmQ7DQp9DQoNCi8qKg0KICogIOS9v+eUqOe7neWvuee9keWdgA0KICoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkZ3VybCAg5Zyw5Z2ADQogKiBAcmV0dXJuICAgIHN0cmluZw0KICovDQpmdW5jdGlvbiBHbWFwdXJsKCRndXJsKQ0Kew0KICAgIHJldHVybiBwcmVnX3JlcGxhY2UoIi9odHRwOlwvXC8vaSIsICRndXJsKSA/ICRndXJsIDogJEdMT0JBTFNbJ2NmZ19iYXNlaG9zdCddLiRndXJsOw0KfQ0KDQovKioNCiAqICDlvJXnlKjlm57lpI3moIforrDlpITnkIYNCiAqDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHF1b3RlDQogKiBAcmV0dXJuICAgIHN0cmluZw0KICovDQpmdW5jdGlvbiBRdW90ZV9yZXBsYWNlKCRxdW90ZSkNCnsNCiAgICAkcXVvdGUgPSBzdHJfcmVwbGFjZSgne3F1b3RlfScsJzxkaXYgY2xhc3M9ImRlY210LWJveCI+JywkcXVvdGUpOw0KICAgICRxdW90ZSA9IHN0cl9yZXBsYWNlKCd7dGl0bGV9JywnPGRpdiBjbGFzcz0iZGVjbXQtdGl0bGUiPjxzcGFuIGNsYXNzPSJ1c2VybmFtZSI+JywkcXVvdGUpOw0KICAgICRxdW90ZSA9IHN0cl9yZXBsYWNlKCd7L3RpdGxlfScsJzwvc3Bhbj48L2Rpdj4nLCRxdW90ZSk7DQogICAgJHF1b3RlID0gc3RyX3JlcGxhY2UoJyZsdDtici8mZ3Q7JywnPGJyPicsJHF1b3RlKTsNCiAgICAkcXVvdGUgPSBzdHJfcmVwbGFjZSgnJmx0OycsICc8JywgJHF1b3RlKTsNCiAgICAkcXVvdGUgPSBzdHJfcmVwbGFjZSgnJmd0OycsICc+JywgJHF1b3RlKTsNCiAgICAkcXVvdGUgPSBzdHJfcmVwbGFjZSgne2NvbnRlbnR9JywnPGRpdiBjbGFzcz0iZGVjbXQtY29udGVudCI+JywkcXVvdGUpOw0KICAgICRxdW90ZSA9IHN0cl9yZXBsYWNlKCd7L2NvbnRlbnR9JywnPC9kaXY+JywkcXVvdGUpOw0KICAgICRxdW90ZSA9IHN0cl9yZXBsYWNlKCd7L3F1b3RlfScsJzwvZGl2PicsJHF1b3RlKTsNCiAgICByZXR1cm4gJHF1b3RlOw0KfQ0KDQovKioNCiAqICDojrflj5bjgIHlhpnlhaXmjIflrppjYWNoZWlk55qE5Z2XDQogKg0KICogQHBhcmFtICAgICBzdHJpbmcgICRjYWNoZWlkICDnvJPlrZhJRA0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KZnVuY3Rpb24gR2V0Q2FjaGVCbG9jaygkY2FjaGVpZCkNCnsNCiAgICBnbG9iYWwgJGNmZ19wdWNjYWNoZV90aW1lOw0KICAgICRjYWNoZWZpbGUgPSBERURFREFUQS4nL2NhY2hlLycuJGNhY2hlaWQuJy5pbmMnOw0KICAgIGlmKCFmaWxlX2V4aXN0cygkY2FjaGVmaWxlKSB8fCBmaWxlc2l6ZSgkY2FjaGVmaWxlKT09MCB8fCANCiAgICAgICRjZmdfcHVjY2FjaGVfdGltZT09MCB8fCB0aW1lKCkgLSBmaWxlbXRpbWUoJGNhY2hlZmlsZSkgPiAkY2ZnX3B1Y2NhY2hlX3RpbWUpDQogICAgew0KICAgICAgICByZXR1cm4gJyc7DQogICAgfQ0KICAgICRmcCA9IGZvcGVuKCRjYWNoZWZpbGUsICdyJyk7DQogICAgJHN0ciA9IEBmcmVhZCgkZnAsIGZpbGVzaXplKCRjYWNoZWZpbGUpKTsNCiAgICBmY2xvc2UoJGZwKTsNCiAgICByZXR1cm4gJHN0cjsNCn0NCg0KLyoqDQogKiAg5YaZ5YWl57yT5a2Y5Z2XDQogKg0KICogQHBhcmFtICAgICBzdHJpbmcgICRjYWNoZWlkICDnvJPlrZhJRA0KICogQHBhcmFtICAgICBzdHJpbmcgICRzdHIgIOWtl+espuS4suS/oeaBrw0KICogQHJldHVybiAgICBzdHJpbmcNCiAqLw0KZnVuY3Rpb24gV3JpdGVDYWNoZUJsb2NrKCRjYWNoZWlkLCAkc3RyKQ0Kew0KICAgICRjYWNoZWZpbGUgPSBERURFREFUQS4nL2NhY2hlLycuJGNhY2hlaWQuJy5pbmMnOw0KICAgICRmcCA9IGZvcGVuKCRjYWNoZWZpbGUsICd3Jyk7DQogICAgJHN0ciA9IGZ3cml0ZSgkZnAsICRzdHIpOw0KICAgIGZjbG9zZSgkZnApOw0KfQ0KDQovL3dhcOWMuuWfnw0KDQoNCg0KLyoqDQoNCiAqICDojrflvpfmlofnq6DnvZHlnYANCg0KICogIOWmguaenOimgeiOt+W+l+aWh+S7tueahOi3r+W+hO+8jOebtOaOpeeUqA0KDQogKiAgR2V0RmlsZVVybCgkYWlkLCR0eXBlaWQsJHRpbWV0YWcsJHRpdGxlLCRpc21ha2UsJHJhbmssJG5hbWVydWxlLCR0eXBlZGlyLCRtb25leSkNCg0KICogIOWNs+aYr+S4jeaMh+WumuermeeCueWPguaVsOWImei/lOWbnuebuOW9k+WvueagueebruW9leeahOecn+Wunui3r+W+hA0KDQogKg0KDQogKiBAcGFyYW0gICAgIGludCAgJGFpZCAg5paH5qGjSUQNCg0KICogQHBhcmFtICAgICBpbnQgICR0eXBlaWQgIOagj+ebrklEDQoNCiAqIEBwYXJhbSAgICAgaW50ICAkdGltZXRhZyAg5pe26Ze05oizDQoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdGl0bGUgIOagh+mimA0KDQogKiBAcGFyYW0gICAgIGludCAgJGlzbWFrZSAg5piv5ZCm55Sf5oiQDQoNCiAqIEBwYXJhbSAgICAgaW50ICAkcmFuayAg6ZiF6K+75p2D6ZmQDQoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkbmFtZXJ1bGUgIOWQjeensOinhOWImQ0KDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHR5cGVkaXIgIOagj+ebrmRpcg0KDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJG1vbmV5ICDpnIDopoHph5HluIENCg0KICogQHBhcmFtICAgICBzdHJpbmcgICRmaWxlbmFtZSAg5paH5Lu25ZCN56ewDQoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkbW9yZXNpdGUgIOWkmuermeeCuQ0KDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHNpdGV1cmwgIOermeeCueWcsOWdgA0KDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHNpdGVwYXRoICDnq5nngrnot6/lvoQNCg0KICogQHJldHVybiAgICBzdHJpbmcNCg0KICovDQoNCmlmICggISBmdW5jdGlvbl9leGlzdHMoJ0dldEZpbGVVcmxfd2FwJykpDQoNCnsNCg0KICAgIGZ1bmN0aW9uIEdldEZpbGVVcmxfd2FwKCRhaWQsJHR5cGVpZCwkdGltZXRhZywkdGl0bGUsJGlzbWFrZT0wLCRyYW5rPTAsJG5hbWVydWxlPScnLCR0eXBlZGlyPScnLA0KDQogICAgJG1vbmV5PTAsICRmaWxlbmFtZT0nJywkbW9yZXNpdGU9MCwkc2l0ZXVybD0nJywkc2l0ZXBhdGg9JycpDQoNCiAgICB7DQoNCiAgICAgICAgJGFydGljbGVVcmwgPSBHZXRGaWxlTmFtZV93YXAoJGFpZCwkdHlwZWlkLCR0aW1ldGFnLCR0aXRsZSwkaXNtYWtlLCRyYW5rLCRuYW1lcnVsZSwkdHlwZWRpciwkbW9uZXksJGZpbGVuYW1lKTsNCg0KICAgICAgICAkc2l0ZXBhdGggPSBNZlR5cGVkaXJfd2FwKCRzaXRlcGF0aCk7DQoNCg0KDQogICAgICAgIC8v5piv5ZCm5by65Yi25L2/55So57ud5a+5572R5Z2ADQoNCiAgICAgICAgaWYoJEdMT0JBTFNbJ2NmZ19tdWx0aV9zaXRlJ109PSdZJykNCg0KICAgICAgICB7DQoNCiAgICAgICAgICAgIGlmKCRzaXRldXJsPT0nJykNCg0KICAgICAgICAgICAgew0KDQogICAgICAgICAgICAgICAgJHNpdGV1cmwgPSAkR0xPQkFMU1snY2ZnX3dhcHVybCddOw0KDQogICAgICAgICAgICAgICAgJGFydGljbGVVcmwgPSBwcmVnX3JlcGxhY2UoIiNeIi4kc2l0ZXBhdGguJyMnLCAnJywgJGFydGljbGVVcmwpOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmKCRtb3Jlc2l0ZT09MSkNCg0KICAgICAgICAgICAgew0KDQogICAgICAgICAgICAgICAgJGFydGljbGVVcmwgPSBwcmVnX3JlcGxhY2UoIiNeIi4kc2l0ZXBhdGguJyMnLCAnJywgJGFydGljbGVVcmwpOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmKCFwcmVnX21hdGNoKCIvaHR0cDovIiwgJGFydGljbGVVcmwpKQ0KDQogICAgICAgICAgICB7DQoNCiAgICAgICAgICAgICAgICAkYXJ0aWNsZVVybCA9ICRzaXRldXJsLiRhcnRpY2xlVXJsOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgfQ0KDQoNCg0KICAgICAgICByZXR1cm4gJGFydGljbGVVcmw7DQoNCiAgICB9DQoNCn0NCg0KDQoNCg0KDQovKioNCg0KICogIOagj+ebruebruW9leinhOWImQ0KDQogKg0KDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHR5cGVkaXIgICDmoI/nm67nm67lvZUNCg0KICogQHJldHVybiAgICBzdHJpbmcNCg0KICovDQoNCmZ1bmN0aW9uIE1mVHlwZWRpcl93YXAoJHR5cGVkaXIpDQoNCnsNCg0KICAgIGlmKHByZWdfbWF0Y2goIi9eaHR0cDp8XmZ0cDovaSIsICR0eXBlZGlyKSkgcmV0dXJuICR0eXBlZGlyOw0KDQogICAgJHR5cGVkaXIgPSBzdHJfcmVwbGFjZSgie2Ntc3BhdGh9IiwkR0xPQkFMU1snY2ZnX2Ntc3BhdGgnXSwkdHlwZWRpcik7DQoNCiAgICAkdHlwZWRpciA9IHByZWdfcmVwbGFjZSgiL1wvezEsfS8iLCAiLyIsICR0eXBlZGlyKTsNCg0KICAgICR0eXBlZGlyPSIveyRHTE9CQUxTWydjZmdfd2FwcGF0aCddfXskdHlwZWRpcn0iOw0KDQogICAgJHR5cGVkaXI9c3RyX3JlcGxhY2UoIi9tL20vIiwiL20vIiwkdHlwZWRpcik7DQogICAgJHR5cGVkaXI9c3RyX3JlcGxhY2UoIi93YXAvd2FwLyIsIi93YXAvIiwkdHlwZWRpcik7DQoNCiAgICByZXR1cm4gJHR5cGVkaXI7DQoNCn0NCg0KDQoNCmZ1bmN0aW9uIE1mVHlwZWRpcl9tKCR0eXBlZGlyKQ0KDQp7DQoNCiAgICBpZihwcmVnX21hdGNoKCIvXmh0dHA6fF5mdHA6L2kiLCAkdHlwZWRpcikpIHJldHVybiAkdHlwZWRpcjsNCg0KICAgICR0eXBlZGlyID0gc3RyX3JlcGxhY2UoIntjbXNwYXRofSIsJEdMT0JBTFNbJ2NmZ19jbXNwYXRoJ10sJHR5cGVkaXIpOw0KDQogICAgJHR5cGVkaXIgPSBwcmVnX3JlcGxhY2UoIi9cL3sxLH0vIiwgIi8iLCAkdHlwZWRpcik7DQoNCiAgICAkdHlwZWRpcj0iL3skR0xPQkFMU1snY2ZnX3dhcHVybCddfXskdHlwZWRpcn0iOw0KDQogICAgcmV0dXJuICR0eXBlZGlyOw0KDQp9DQoNCg0KDQoNCg0KLyoqDQoNCiAqICDojrflvpfmlrDmlofku7blkI0o5pys5Ye95pWw5Lya6Ieq5Yqo5Yib5bu655uu5b2VKQ0KDQogKg0KDQogKiBAcGFyYW0gICAgIGludCAgJGFpZCAg5paH5qGjSUQNCg0KICogQHBhcmFtICAgICBpbnQgICR0eXBlaWQgIOagj+ebrklEDQoNCiAqIEBwYXJhbSAgICAgaW50ICAkdGltZXRhZyAg5pe26Ze05oizDQoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdGl0bGUgIOagh+mimA0KDQogKiBAcGFyYW0gICAgIGludCAgJGlzbWFrZSAg5piv5ZCm55Sf5oiQDQoNCiAqIEBwYXJhbSAgICAgaW50ICAkcmFuayAg6ZiF6K+75p2D6ZmQDQoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkbmFtZXJ1bGUgIOWQjeensOinhOWImQ0KDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJHR5cGVkaXIgIOagj+ebrmRpcg0KDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJG1vbmV5ICDpnIDopoHph5HluIENCg0KICogQHBhcmFtICAgICBzdHJpbmcgICRmaWxlbmFtZSAg5paH5Lu25ZCN56ewDQoNCiAqIEByZXR1cm4gICAgc3RyaW5nDQoNCiAqLw0KDQppZiAoICEgZnVuY3Rpb25fZXhpc3RzKCdHZXRGaWxlTmV3TmFtZV93YXAnKSkNCg0Kew0KDQogICAgIGZ1bmN0aW9uIEdldEZpbGVOZXdOYW1lX3dhcCgkYWlkLCR0eXBlaWQsJHRpbWV0YWcsJHRpdGxlLCRpc21ha2U9MCwkcmFuaz0wLCRuYW1lcnVsZT0nJywkdHlwZWRpcj0nJywkbW9uZXk9MCwkZmlsZW5hbWU9JycpDQoNCiAgICB7DQoNCiAgICAgICAgZ2xvYmFsICRjZmdfYXJjX2Rpcm5hbWU7DQoNCiAgICAgICAgJGFydGljbGVuYW1lID0gR2V0RmlsZU5hbWVfd2FwKCRhaWQsJHR5cGVpZCwkdGltZXRhZywkdGl0bGUsJGlzbWFrZSwkcmFuaywkbmFtZXJ1bGUsJHR5cGVkaXIsJG1vbmV5LCRmaWxlbmFtZSk7DQoNCiAgICAgICAgDQoNCiAgICAgICAgaWYocHJlZ19tYXRjaCgiL1w/LyIsICRhcnRpY2xlbmFtZSkpDQoNCiAgICAgICAgew0KDQogICAgICAgICAgICByZXR1cm4gJGFydGljbGVuYW1lOw0KDQogICAgICAgIH0NCg0KICAgICAgICANCg0KICAgICAgICBpZigkY2ZnX2FyY19kaXJuYW1lPT0nWScgJiYgcHJlZ19tYXRjaCgiL1wvJC8iLCAkYXJ0aWNsZW5hbWUpKQ0KDQogICAgICAgIHsNCg0KICAgICAgICAgICAgJGFydGljbGVuYW1lID0gJGFydGljbGVuYW1lLiJpbmRleC5odG1sIjsNCg0KICAgICAgICB9DQoNCiAgICAgICAgDQoNCiAgICAgICAgJHNsZW4gPSBzdHJsZW4oJGFydGljbGVuYW1lKS0xOw0KDQogICAgICAgIGZvcigkaT0kc2xlbjskaT49MDskaS0tKQ0KDQogICAgICAgIHsNCg0KICAgICAgICAgICAgaWYoJGFydGljbGVuYW1lWyRpXT09Jy8nKQ0KDQogICAgICAgICAgICB7DQoNCiAgICAgICAgICAgICAgICAkc3VicG9zID0gJGk7DQoNCiAgICAgICAgICAgICAgICBicmVhazsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgIH0NCg0KICAgICAgICAkb2tkaXIgPSBzdWJzdHIoJGFydGljbGVuYW1lLDAsJHN1YnBvcyk7DQoNCiAgICAgICAgQ3JlYXRlRGlyKCRva2Rpcik7DQoNCiAgICAgICAgcmV0dXJuICRhcnRpY2xlbmFtZTsNCg0KICAgIH0NCg0KfQ0KDQoNCg0KDQoNCg0KDQovKioNCg0KICogIOiOt+W+l+aWh+S7tuebuOWvueS6juS4u+ermeeCueagueebruW9leeahOeJqeeQhuaWh+S7tuWQjSjliqjmgIHnvZHlnYDov5Tlm551cmwpDQoNCiAqDQoNCiAqIEBwYXJhbSAgICAgaW50ICAkYWlkICDmlofmoaNJRA0KDQogKiBAcGFyYW0gICAgIGludCAgJHR5cGVpZCAg5qCP55uuSUQNCg0KICogQHBhcmFtICAgICBpbnQgICR0aW1ldGFnICDml7bpl7TmiLMNCg0KICogQHBhcmFtICAgICBzdHJpbmcgICR0aXRsZSAg5qCH6aKYDQoNCiAqIEBwYXJhbSAgICAgaW50ICAkaXNtYWtlICDmmK/lkKbnlJ/miJANCg0KICogQHBhcmFtICAgICBpbnQgICRyYW5rICDpmIXor7vmnYPpmZANCg0KICogQHBhcmFtICAgICBzdHJpbmcgICRuYW1lcnVsZSAg5ZCN56ew6KeE5YiZDQoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkdHlwZWRpciAg5qCP55uuZGlyDQoNCiAqIEBwYXJhbSAgICAgc3RyaW5nICAkbW9uZXkgIOmcgOimgemHkeW4gQ0KDQogKiBAcGFyYW0gICAgIHN0cmluZyAgJGZpbGVuYW1lICDmlofku7blkI3np7ANCg0KICogQHJldHVybiAgICBzdHJpbmcNCg0KICovDQoNCmlmICggISBmdW5jdGlvbl9leGlzdHMoJ0dldEZpbGVOYW1lX3dhcCcpKQ0KDQp7DQoNCiAgICBmdW5jdGlvbiBHZXRGaWxlTmFtZV93YXAoJGFpZCwkdHlwZWlkLCR0aW1ldGFnLCR0aXRsZSwkaXNtYWtlPTAsJHJhbms9MCwkbmFtZXJ1bGU9JycsJHR5cGVkaXI9JycsJG1vbmV5PTAsJGZpbGVuYW1lPScnKQ0KDQogICAgew0KDQogICAgICAgIGdsb2JhbCAkY2ZnX3Jld3JpdGUsICRjZmdfY21zcGF0aCwgJGNmZ19hcmNkaXIsICRjZmdfc3BlY2lhbCwgJGNmZ19hcmNfZGlybmFtZSwkY2ZnX3dhcHBhdGg7DQoNCiAgICAgICAgLy/msqHmjIflrprmoI/nm67ml7bnlKjlm7rlrprop4TliJnvvIjkuJPpopjvvIkNCg0KICAgICAgICBpZihlbXB0eSgkbmFtZXJ1bGUpKSB7DQoNCiAgICAgICAgICAgICRuYW1lcnVsZSA9ICRjZmdfc3BlY2lhbC4nL2FyYy17YWlkfS5odG1sJzsNCg0KICAgICAgICAgICAgJHR5cGVpZCA9IC0xOw0KDQogICAgICAgIH0NCg0KICAgICAgICBpZigkcmFuayE9MCB8fCAkaXNtYWtlPT0tMSB8fCAkdHlwZWlkPT0wIHx8ICRtb25leT4wKQ0KDQogICAgICAgIHsNCg0KICAgICAgICAgICAgLy/liqjmgIHmlofnq6ANCg0KICAgICAgICAgICAgaWYoJGNmZ19yZXdyaXRlID09ICdZJykNCg0KICAgICAgICAgICAgew0KDQogICAgICAgICAgICAgICAgcmV0dXJuICRHTE9CQUxTWyJjZmdfcGx1c19kaXIiXS4iL3ZpZXctIi4kYWlkLictMS5odG1sJzsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBlbHNlDQoNCiAgICAgICAgICAgIHsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkR0xPQkFMU1snY2ZnX3BocHVybCddLiIvdmlldy5waHA/YWlkPSRhaWQiOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgfQ0KDQogICAgICAgIGVsc2UNCg0KICAgICAgICB7DQoNCiAgICAgICAgICAgICRhcnRpY2xlRGlyID0gTWZUeXBlZGlyKCR0eXBlZGlyKTsNCg0KICAgICAgICAgICAgJGFydGljbGVSdWxlID0gc3RydG9sb3dlcigkbmFtZXJ1bGUpOw0KDQogICAgICAgICAgICBpZigkYXJ0aWNsZVJ1bGU9PScnKQ0KDQogICAgICAgICAgICB7DQoNCiAgICAgICAgICAgICAgICAkYXJ0aWNsZVJ1bGUgPSBzdHJ0b2xvd2VyKCRHTE9CQUxTWydjZmdfZGZfbmFtZXJ1bGUnXSk7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYoJHR5cGVkaXI9PScnKQ0KDQogICAgICAgICAgICB7DQoNCiAgICAgICAgICAgICAgICAkYXJ0aWNsZURpciAgPSAkR0xPQkFMU1snY2ZnX2Ntc3BhdGgnXS4kR0xPQkFMU1snY2ZnX2FyY2RpciddOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgJGR0aW1lID0gR2V0RGF0ZU1rKCR0aW1ldGFnKTsNCg0KICAgICAgICAgICAgbGlzdCgkeSwgJG0sICRkKSA9IGV4cGxvZGUoJy0nLCAkZHRpbWUpOw0KDQogICAgICAgICAgICAkYXJyX3Jwc291cmNlID0gYXJyYXkoJ3t0eXBlZGlyfScsJ3t5fScsJ3ttfScsJ3tkfScsJ3t0aW1lc3RhbXB9Jywne2FpZH0nLCd7Y2N9Jyk7DQoNCiAgICAgICAgICAgICRhcnJfcnB2YWx1ZXMgPSBhcnJheSgkYXJ0aWNsZURpciwkeSwgJG0sICRkLCAkdGltZXRhZywgJGFpZCwgZGQyY2hhcigkbS4kZC4kYWlkLiR5KSk7DQoNCiAgICAgICAgICAgIGlmKCRmaWxlbmFtZSAhPSAnJykNCg0KICAgICAgICAgICAgew0KDQogICAgICAgICAgICAgICAgJGFydGljbGVSdWxlID0gZGlybmFtZSgkYXJ0aWNsZVJ1bGUpLicvJy4kZmlsZW5hbWUuJEdMT0JBTFNbJ2NmZ19kZl9leHQnXTsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAkYXJ0aWNsZVJ1bGUgPSBzdHJfcmVwbGFjZSgkYXJyX3Jwc291cmNlLCRhcnJfcnB2YWx1ZXMsJGFydGljbGVSdWxlKTsNCg0KICAgICAgICAgICAgaWYocHJlZ19tYXRjaCgiL1x7cC8iLCAkYXJ0aWNsZVJ1bGUpKQ0KDQogICAgICAgICAgICB7DQoNCiAgICAgICAgICAgICAgICAkYXJ0aWNsZVJ1bGUgPSBzdHJfcmVwbGFjZSgne3Bpbnlpbn0nLEdldFBpbnlpbigkdGl0bGUpLCRhcnRpY2xlUnVsZSk7DQoNCiAgICAgICAgICAgICAgICAkYXJ0aWNsZVJ1bGUgPSBzdHJfcmVwbGFjZSgne3B5fScsR2V0UGlueWluKCR0aXRsZSwxKSwkYXJ0aWNsZVJ1bGUpOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICRhcnRpY2xlVXJsID0gJy8nLnByZWdfcmVwbGFjZSgiL15cLy8iLCAnJywgJGFydGljbGVSdWxlKTsNCg0KICAgICAgICAgICAgaWYocHJlZ19tYXRjaCgiL2luZGV4XC5odG1sLyIsICRhcnRpY2xlVXJsKSAmJiAkY2ZnX2FyY19kaXJuYW1lPT0nWScpDQoNCiAgICAgICAgICAgIHsNCg0KICAgICAgICAgICAgICAgICRhcnRpY2xlVXJsID0gc3RyX3JlcGxhY2UoJ2luZGV4Lmh0bWwnLCAnJywgJGFydGljbGVVcmwpOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICRhcnRpY2xlVXJsPSIveyRjZmdfd2FwcGF0aH17JGFydGljbGVVcmx9IjsNCg0KICAgICAgICAgICByZXR1cm4gJGFydGljbGVVcmw7DQoNCiAgICAgICAgfQ0KDQogICAgfQ0KDQp9DQo=
</file>
<file type='file' name='makehtml_all_wap.php'>
PD9waHANDQovKioNDQogKiDnlJ/miJDmiYDmnInpobXpnaINDQogKg0NCiAqIEB2ZXJzaW9uICAgICAgICAkSWQ6IG1ha2VodG1sX2FsbC5waHAgMSA4OjQ4IDIwMTDlubQ35pyIMTPml6VaIHRpYW55YSAkDQ0KICogQHBhY2thZ2UgICAgICAgIERlZGVDTVMuQWRtaW5pc3RyYXRvcg0NCiAqIEBjb3B5cmlnaHQgICAgICBDb3B5cmlnaHQgKGMpIDIwMDcgLSAyMDEwLCBEZXNEZXYsIEluYy4NDQogKiBAbGljZW5zZSAgICAgICAgaHR0cDovL2hlbHAuZGVkZWNtcy5jb20vdXNlcnNndWlkZS9saWNlbnNlLmh0bWwNDQogKiBAbGluayAgICAgICAgICAgaHR0cDovL3d3dy5kZWRlY21zLmNvbQ0NCiAqLw0NCnJlcXVpcmVfb25jZShkaXJuYW1lKF9fRklMRV9fKS4iL2NvbmZpZy5waHAiKTsNDQpyZXF1aXJlX29uY2UoREVERUlOQy4iL2NoYW5uZWx1bml0LmZ1bmMucGhwIik7DQ0KJGFjdGlvbiA9IChlbXB0eSgkYWN0aW9uKSA/ICcnIDogJGFjdGlvbik7DQ0KDQ0KaWYoJGFjdGlvbj09JycpDQ0Kew0NCiAgICByZXF1aXJlX29uY2UoREVERUFETUlOLiIvdGVtcGxldHMvbWFrZWh0bWxfYWxsX3dhcC5odG0iKTsNDQogICAgZXhpdCgpOw0NCn0NDQplbHNlIGlmKCRhY3Rpb249PSdtYWtlJykNDQp7DQ0KICAgIC8vc3RlcCA9IDEg5pu05paw5Li76aG144CBc3RlcCA9IDIg5pu05paw5YaF5a6544CBc3RlcCA9IDMg5pu05paw5qCP55uuDQ0KICAgIGlmKGVtcHR5KCRzdGVwKSkgJHN0ZXAgPSAxOw0NCg0NCiAgICAvL+abtOaWsOaWh+aho+WJjeS8mOWMluaVsOaNrg0NCiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0NDQogICAgZnVuY3Rpb24gXzFfT3B0aW1pemVEYXRhMSgpDQ0KICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSovDQ0KICAgIGlmKCRzdGVwPT0xKQ0NCiAgICB7DQ0KICAgICAgICAkc3RhcnR0aW1lID0gR2V0TWtUaW1lKCRzdGFydHRpbWUpOw0NCiAgICAgICAgJG1rdmFsdWUgPSAoJHVwdHlwZT09J3RpbWUnID8gJHN0YXJ0dGltZSA6ICRzdGFydGlkKTsNDQogICAgICAgIE9wdGltaXplRGF0YSgkZHNxbCk7DQ0KICAgICAgICBTaG93TXNnKCLlrozmiJDmlbDmja7kvJjljJbvvIznjrDlnKjlvIDlp4vmm7TmlrDmlofmoaPvvIEiLCJtYWtlaHRtbF9hbGxfd2FwLnBocD9hY3Rpb249bWFrZSZzdGVwPTImdXB0eXBlPSR1cHR5cGUmbWt2YWx1ZT0kbWt2YWx1ZSIpOw0NCiAgICAgICAgZXhpdCgpOw0NCiAgICB9DQ0KICAgIC8v5pu05paw5paH5qGjDQ0KICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLQ0NCiAgICBmdW5jdGlvbiBfMl9NYWtlQXJjaGl2ZXMoKQ0NCiAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0qLw0NCiAgICBlbHNlIGlmKCRzdGVwPT0yKQ0NCiAgICB7DQ0KICAgICAgICBpbmNsdWRlX29uY2UoREVERUFETUlOLiIvbWFrZWh0bWxfYXJjaGl2ZXNfYWN0aW9uX3dhcC5waHAiKTsNDQogICAgICAgIGV4aXQoKTsNDQogICAgfQ0NCiAgICAvL+abtOaWsOS4u+mhtQ0NCiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NDQogICAgZnVuY3Rpb24gXzNfTWFrZUhvbWVQYWdlKCkNDQogICAgLS0tLS0tLS0tLS0tLS0tLS0tLSovDQ0KICAgIGlmKCRzdGVwPT0zKQ0NCiAgICB7ICANDQogICAgaW5jbHVkZV9vbmNlKERFREVJTkMuIi9hcmMud2FwX2luZGV4LnBocCIpOw0NCiAgICAgICRzZyA9IG5ldyBzZ3BhZ2UoJGFpZCk7DQ0KICAgICRzZy0+U2F2ZVRvSHRtbCgpOw0NCiAgIA0NCiAgICAgICAgU2hvd01zZygi5a6M5oiQ5pu05paw5omA5pyJ5paH5qGj77yM546w5Zyo5byA5aeL5pu05paw5qCP55uu6aG177yBIiwibWFrZWh0bWxfYWxsX3dhcC5waHA/YWN0aW9uPW1ha2Umc3RlcD00JnVwdHlwZT0kdXB0eXBlJm1rdmFsdWU9JG1rdmFsdWUiKTsNDQogICAgICAgIGV4aXQoKTsNDQogICAgfQ0NCiAgICAvL+abtOaWsOagj+ebrg0NCiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0NDQogICAgZnVuY3Rpb24gXzRfTWFrZUNhdGFsb2coKQ0NCiAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLSovDQ0KICAgIGVsc2UgaWYoJHN0ZXA9PTQpDQ0KICAgIHsNDQogICAgICAgICRta3ZhbHVlID0gaW50dmFsKCRta3ZhbHVlKTsNDQogICAgICAgICR0eXBlaWRzb2sgPSAkdHlwZWlkcyA9IGFycmF5KCk7DQ0KICAgICAgICAkYWRtaW5JRCA9ICRjdXNlckxvZ2luLT5nZXRVc2VySUQoKTsNDQogICAgICAgICRta2NhY2hlZmlsZSA9IERFREVEQVRBLiIvbWthbGxfY2FjaGVfeyRhZG1pbklEfS5waHAiOw0NCiAgICAgICAgaWYoJHVwdHlwZT09J2FsbCcgfHwgZW1wdHkoJG1rdmFsdWUpKQ0NCiAgICAgICAgew0NCiAgICAgICAgICAgIFNob3dNc2coIuS4jemcgOimgei/m+ihjOWIneWkhOeQhu+8jOeOsOabtOaWsOaJgOacieagj+ebru+8gSIsICJtYWtlaHRtbF9saXN0X2FjdGlvbl93YXAucGhwP2dvdHlwZT1ta2FsbGN0Iik7DQ0KICAgICAgICAgICAgZXhpdCgpOw0NCiAgICAgICAgfQ0NCiAgICAgICAgZWxzZQ0NCiAgICAgICAgew0NCiAgICAgICAgICAgIGlmKCR1cHR5cGU9PSd0aW1lJykNDQogICAgICAgICAgICB7DQ0KICAgICAgICAgICAgICAgICRxdWVyeSA9ICJTRUxFQ1QgIERJU1RJTkNUIHR5cGVpZCBGcm9tIGAjQF9fYXJjdGlueWAgV0hFUkUgc2VuZGRhdGUgPj0iLkdldE1rVGltZSgkbWt2YWx1ZSkuIiBBTkQgYXJjcmFuaz4tMSI7DQ0KICAgICAgICAgICAgfQ0NCiAgICAgICAgICAgIGVsc2UNDQogICAgICAgICAgICB7DQ0KICAgICAgICAgICAgICAgICRxdWVyeSA9ICJTRUxFQ1QgRElTVElOQ1QgdHlwZWlkIEZyb20gYCNAX19hcmN0aW55YCBXSEVSRSBpZD49JG1rdmFsdWUgQU5EIGFyY3Jhbms+LTEiOw0NCiAgICAgICAgICAgIH0NDQogICAgICAgICAgICAkZHNxbC0+U2V0UXVlcnkoJHF1ZXJ5KTsNDQogICAgICAgICAgICAkZHNxbC0+RXhlY3V0ZSgpOw0NCiAgICAgICAgICAgIHdoaWxlKCRyb3cgPSAkZHNxbC0+R2V0QXJyYXkoKSkNDQogICAgICAgICAgICB7DQ0KICAgICAgICAgICAgICAgICR0eXBlaWRzWyRyb3dbJ3R5cGVpZCddXSA9IDE7DQ0KICAgICAgICAgICAgfQ0NCg0NCiAgICAgICAgICAgIGZvcmVhY2goJHR5cGVpZHMgYXMgJGs9PiR2KQ0NCiAgICAgICAgICAgIHsNDQogICAgICAgICAgICAgICAgJHZzID0gYXJyYXkoKTsNDQogICAgICAgICAgICAgICAgJHZzID0gR2V0UGFyZW50SWRzKCRrKTsNDQogICAgICAgICAgICAgICAgaWYoICFpc3NldCgkdHlwZWlkc29rWyRrXSkgKQ0NCiAgICAgICAgICAgICAgICB7DQ0KICAgICAgICAgICAgICAgICAgICAkdHlwZWlkc29rWyRrXSA9IDE7DQ0KICAgICAgICAgICAgICAgIH0NDQogICAgICAgICAgICAgICAgZm9yZWFjaCgkdnMgYXMgJGs9PiR2KQ0NCiAgICAgICAgICAgICAgICB7DQ0KICAgICAgICAgICAgICAgICAgICBpZighaXNzZXQoJHR5cGVpZHNva1skdl0pKQ0NCiAgICAgICAgICAgICAgICAgICAgew0NCiAgICAgICAgICAgICAgICAgICAgICAgICR0eXBlaWRzb2tbJHZdID0gMTsNDQogICAgICAgICAgICAgICAgICAgIH0NDQogICAgICAgICAgICAgICAgfQ0NCiAgICAgICAgICAgIH0NDQogICAgICAgIH0NDQogICAgICAgICRmcCA9IGZvcGVuKCRta2NhY2hlZmlsZSwndycpIG9yIGRpZSgi5peg5rOV5YaZ5YWl57yT5a2Y5paH5Lu277yaeyRta2NhY2hlZmlsZX0g5omA5Lul5peg5rOV5pu05paw5qCP55uu77yBIik7DQ0KICAgICAgICBpZihjb3VudCgkdHlwZWlkc29rKT4wKQ0NCiAgICAgICAgew0NCiAgICAgICAgICAgIGZ3cml0ZSgkZnAsIjwiLiI/cGhwXHJcbiIpOw0NCiAgICAgICAgICAgICRpID0gLTE7DQ0KICAgICAgICAgICAgZm9yZWFjaCgkdHlwZWlkc29rIGFzICRrPT4kdCkNDQogICAgICAgICAgICB7DQ0KICAgICAgICAgICAgICAgIGlmKCRrIT0nJykNDQogICAgICAgICAgICAgICAgew0NCiAgICAgICAgICAgICAgICAgICAgJGkrKzsNDQogICAgICAgICAgICAgICAgICAgIGZ3cml0ZSgkZnAsICJcJGlkQXJyYXlbJGldPXska307XHJcbiIpOw0NCiAgICAgICAgICAgICAgICB9DQ0KICAgICAgICAgICAgfQ0NCiAgICAgICAgICAgIGZ3cml0ZSgkZnAsIj8iLiI+Iik7DQ0KICAgICAgICAgICAgZmNsb3NlKCRmcCk7DQ0KICAgICAgICAgICAgU2hvd01zZygi5a6M5oiQ5qCP55uu57yT5a2Y5aSE55CG77yM546w6L2s5ZCR5pu05paw5qCP55uu77yBIiwibWFrZWh0bWxfbGlzdF9hY3Rpb25fd2FwLnBocD9nb3R5cGU9bWthbGwiKTsNDQogICAgICAgICAgICBleGl0KCk7DQ0KICAgICAgICB9DQ0KICAgICAgICBlbHNlDQ0KICAgICAgICB7DQ0KICAgICAgICAgICAgZmNsb3NlKCRmcCk7DQ0KICAgICAgICAgICAgU2hvd01zZygi5rKh5pyJ5Y+v5pu05paw55qE5qCP55uu77yM546w5Zyo5L2c5pyA5ZCO5pWw5o2u5LyY5YyW77yBIiwibWFrZWh0bWxfYWxsX3dhcC5waHA/YWN0aW9uPW1ha2Umc3RlcD0xMCIpOw0NCiAgICAgICAgICAgIGV4aXQoKTsNDQogICAgICAgIH0NDQogICAgfQ0NCiAgICAvL+aIkOWKn+eKtuaAgQ0NCiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0NDQogICAgZnVuY3Rpb24gXzEwX01ha2VBbGxPSygpDQ0KICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tKi8NDQogICAgZWxzZSBpZigkc3RlcD09MTApDQ0KICAgIHsNDQogICAgICAgICRhZG1pbklEID0gJGN1c2VyTG9naW4tPmdldFVzZXJJRCgpOw0NCiAgICAgICAgJG1rY2FjaGVmaWxlID0gREVERURBVEEuIi9ta2FsbF9jYWNoZV97JGFkbWluSUR9LnBocCI7DQ0KICAgICAgICBAdW5saW5rKCRta2NhY2hlZmlsZSk7DQ0KICAgICAgICBPcHRpbWl6ZURhdGEoJGRzcWwpOw0NCiAgICAgICAgU2hvd01zZygi5a6M5oiQ5omA5pyJ5paH5Lu255qE5pu05paw77yBIiwiamF2YXNjcmlwdDo7Iik7DQ0KICAgICAgICBleGl0KCk7DQ0KICAgIH0vL21ha2Ugc3RlcA0NCg0NCn0gLy9hY3Rpb249PSdtYWtlJw0NCg0NCi8qKg0NCiAqICDkvJjljJbmlbDmja4NDQogKg0NCiAqIEBhY2Nlc3MgICAgcHVibGljDQ0KICogQHBhcmFtICAgICBvYmplY3QgICRkc3FsICDmlbDmja7lupPlr7nosaENDQogKiBAcmV0dXJuICAgIHZvaWQNDQogKi8NDQpmdW5jdGlvbiBPcHRpbWl6ZURhdGEoJGRzcWwpDQ0Kew0NCiAgICBnbG9iYWwgJGNmZ19kYnByZWZpeDsNDQogICAgJHRwdGFibGVzID0gYXJyYXkoInskY2ZnX2RicHJlZml4fWFyY2hpdmVzIiwieyRjZmdfZGJwcmVmaXh9YXJjdGlueSIpOw0NCiAgICAkZHNxbC0+U2V0UXVlcnkoIlNFTEVDVCBtYWludGFibGUsYWRkdGFibGUgRlJPTSBgI0BfX2NoYW5uZWx0eXBlYCAiKTsNDQogICAgJGRzcWwtPkV4ZWN1dGUoKTsNDQogICAgd2hpbGUoJHJvdyA9ICRkc3FsLT5HZXRPYmplY3QoKSkNDQogICAgew0NCiAgICAgICAgJGFkZHRhYmxlID0gc3RyX3JlcGxhY2UoJyNAX18nLCRjZmdfZGJwcmVmaXgsJHJvdy0+YWRkdGFibGUpOw0NCiAgICAgICAgaWYoJGFkZHRhYmxlIT0nJyAmJiAhaW5fYXJyYXkoJGFkZHRhYmxlLCR0cHRhYmxlcykpICR0cHRhYmxlc1tdID0gJGFkZHRhYmxlOw0NCiAgICB9DQ0KICAgICR0cHRhYmxlID0gJyc7DQ0KICAgIGZvcmVhY2goJHRwdGFibGVzIGFzICR0KSAkdHB0YWJsZSAuPSAoJHRwdGFibGU9PScnID8gImB7JHR9YCIgOiAiLGB7JHR9YCIgKTsNDQogICAgJGRzcWwtPkV4ZWN1dGVOb25lUXVlcnkoIiBPUFRJTUlaRSBUQUJMRSAkdHB0YWJsZTsgIik7DQ0KfQ==
</file>
<file type='file' name='makehtml_archives_wap.php'>
PD9waHANDQovKioNDQogKiDnlJ/miJDmlofmoaMNDQogKg0NCiAqIEB2ZXJzaW9uICAgICAgICAkSWQ6IG1ha2VodG1sX2FyY2hpdmVzLnBocCAxIDk6MTAgMjAxMOW5tDfmnIgxOeaXpVogdGlhbnlhICQNDQogKiBAcGFja2FnZSAgICAgICAgRGVkZUNNUy5BZG1pbmlzdHJhdG9yDQ0KICogQGNvcHlyaWdodCAgICAgIENvcHlyaWdodCAoYykgMjAwNyAtIDIwMTAsIERlc0RldiwgSW5jLg0NCiAqIEBsaWNlbnNlICAgICAgICBodHRwOi8vaGVscC5kZWRlY21zLmNvbS91c2Vyc2d1aWRlL2xpY2Vuc2UuaHRtbA0NCiAqIEBsaW5rICAgICAgICAgICBodHRwOi8vd3d3LmRlZGVjbXMuY29tDQ0KICovDQ0KcmVxdWlyZV9vbmNlKGRpcm5hbWUoX19GSUxFX18pLiIvY29uZmlnLnBocCIpOw0NCnJlcXVpcmVfb25jZShERURFSU5DLiIvdHlwZWxpbmsuY2xhc3MucGhwIik7DQ0KaW5jbHVkZSBEZWRlSW5jbHVkZSgndGVtcGxldHMvbWFrZWh0bWxfYXJjaGl2ZXNfd2FwLmh0bScpOw==
</file>
<file type='file' name='makehtml_homepage_wap.php'>
PD9waHANDQovKioNDQogKiDnvJbovpHkuIDkuKrmqKHmnb8NDQogKg0NCiAqIEB2ZXJzaW9uICAgICAgICAkSWQ6IHRlbXBsZXRzX29uZV9lZGl0LnBocCAxIDIzOjA3IDIwMTDlubQ35pyIMjDml6VaIHRpYW55YSAkDQ0KICogQHBhY2thZ2UgICAgICAgIERlZGVDTVMuQWRtaW5pc3RyYXRvcg0NCiAqIEBjb3B5cmlnaHQgICAgICBDb3B5cmlnaHQgKGMpIDIwMDcgLSAyMDEwLCBEZXNEZXYsIEluYy4NDQogKiBAbGljZW5zZSAgICAgICAgaHR0cDovL2hlbHAuZGVkZWNtcy5jb20vdXNlcnNndWlkZS9saWNlbnNlLmh0bWwNDQogKiBAbGluayAgICAgICAgICAgaHR0cDovL3d3dy5kZWRlY21zLmNvbQ0NCiAqLw0NCnJlcXVpcmUoZGlybmFtZShfX0ZJTEVfXykuIi9jb25maWcucGhwIik7DQ0KQ2hlY2tQdXJ2aWV3KCd0ZW1wX09uZScpOw0NCmlmKGVtcHR5KCRkb3Bvc3QpKSAkZG9wb3N0ID0gIiI7DQ0KDQ0KDQ0KDQ0KDQ0KIGlmKCRkb3Bvc3Q9PSJtYWtlIikNDQp7DQ0KICAgIGluY2x1ZGVfb25jZShERURFSU5DLiIvYXJjLndhcF9pbmRleC5waHAiKTsNDQoNDQogICAgJHNnID0gbmV3IHNncGFnZSgkYWlkKTsNDQogICAgJHNnLT5TYXZlVG9IdG1sKCk7DQ0KICAgLy9TaG93TXNnKCLmiJDlip/mm7TmlrDkuIDkuKrpobXpnaLvvIEiLCAkZmlsZXVybCk7DQ0KICAgICBlY2hvICLmiJDlip/mm7TmlrDkuLvpobVIVE1M77yaPGJyIC8+PGEgaHJlZj0neyRjZmdfd2FwdXJsfS9pbmRleC5odG1sJyB0YXJnZXQ9J19ibGFuayc+5rWP6KeILi4uPC9hPjxiciAvPiI7DQ0KICAgIGV4aXQoKTsNDQp9DQ0KaW5jbHVkZShERURFQURNSU4uIi90ZW1wbGV0cy9tYWtlaHRtbF9ob21lcGFnZV93YXAuaHRtIik7
</file>
<file type='file' name='makehtml_archives_action_wap.php'>
PD9waHANDQovKioNDQogKiDnlJ/miJDmlofmoaPmk43kvZwNDQogKg0NCiAqIEB2ZXJzaW9uICAgICAgICAkSWQ6IG1ha2VodG1sX2FyY2hpdmVzX2FjdGlvbi5waHAgMSA5OjExIDIwMTDlubQ35pyIMTnml6VaIHRpYW55YSAkDQ0KICogQHBhY2thZ2UgICAgICAgIERlZGVDTVMuQWRtaW5pc3RyYXRvcg0NCiAqIEBjb3B5cmlnaHQgICAgICBDb3B5cmlnaHQgKGMpIDIwMDcgLSAyMDEwLCBEZXNEZXYsIEluYy4NDQogKiBAbGljZW5zZSAgICAgICAgaHR0cDovL2hlbHAuZGVkZWNtcy5jb20vdXNlcnNndWlkZS9saWNlbnNlLmh0bWwNDQogKiBAbGluayAgICAgICAgICAgaHR0cDovL3d3dy5kZWRlY21zLmNvbQ0NCiAqLw0NCnJlcXVpcmVfb25jZShkaXJuYW1lKF9fRklMRV9fKS4iL2NvbmZpZy5waHAiKTsNDQpDaGVja1B1cnZpZXcoJ3N5c19NYWtlSHRtbCcpOw0NCnJlcXVpcmVfb25jZShERURFSU5DLiIvYXJjLmFyY2hpdmVzLmNsYXNzX3dhcC5waHAiKTsNDQoNDQokZXN0MSA9IEV4ZWNUaW1lKCk7DQ0KJHN0YXJ0aWQgID0gKGVtcHR5KCRzdGFydGlkKSAgPyAtMSAgOiAkc3RhcnRpZCk7DQ0KJGVuZGlkICAgID0gKGVtcHR5KCRlbmRpZCkgICAgPyAwICA6ICRlbmRpZCk7DQ0KJHN0YXJ0ZGQgID0gKGVtcHR5KCRzdGFydGRkKSAgPyAwICA6ICRzdGFydGRkKTsNDQokcGFnZXNpemUgPSAoZW1wdHkoJHBhZ2VzaXplKSA/IDIwIDogJHBhZ2VzaXplKTsNDQokdG90YWxudW0gPSAoZW1wdHkoJHRvdGFsbnVtKSA/IDAgIDogJHRvdGFsbnVtKTsNDQokdHlwZWlkICAgPSAoZW1wdHkoJHR5cGVpZCkgICA/IDAgIDogJHR5cGVpZCk7DQ0KJHNlbHRpbWUgID0gKGVtcHR5KCRzZWx0aW1lKSAgPyAwICA6ICRzZWx0aW1lKTsNDQokc3RpbWUgICAgPSAoZW1wdHkoJHN0aW1lKSAgICA/ICcnIDogJHN0aW1lICk7DQ0KJGV0aW1lICAgID0gKGVtcHR5KCRldGltZSkgICAgPyAnJyA6ICRldGltZSk7DQ0KJHNzdGltZSAgID0gKGVtcHR5KCRzc3RpbWUpICAgPyAwICA6ICRzc3RpbWUpOyANDQokbWt2YWx1ZSAgPSAoZW1wdHkoJG1rdmFsdWUpICA/IDAgIDogJG1rdmFsdWUpOw0NCg0NCiRpc3JlbW90ZSAgPSAoZW1wdHkoJGlzcmVtb3RlKT8gMCAgOiAkaXNyZW1vdGUpOw0NCiRzZXJ2aXRlcm0gPSBlbXB0eSgkc2Vydml0ZXJtKT8gIiIgOiAkc2Vydml0ZXJtOw0NCg0NCi8v5LiA6ZSu5pu05paw5Lyg6YCS55qE5Y+C5pWwDQ0KaWYoIWVtcHR5KCR1cHR5cGUpKQ0NCnsNDQogICAgaWYoJHVwdHlwZSE9J3RpbWUnKSAkc3RhcnRpZCA9ICRta3ZhbHVlOw0NCiAgICBlbHNlICR0MSA9ICRta3ZhbHVlOw0NCn0NDQplbHNlDQ0Kew0NCiAgICAkdXB0eXBlID0gJyc7DQ0KfQ0NCg0NCi8v6I635Y+W5p2h5Lu2DQ0KJGlkc3FsID0gJyc7DQ0KJGd3aGVyZSA9ICgkc3RhcnRpZD09LTEgPyAiIFdIRVJFIGFyY3Jhbms9MCAiIDogIiBXSEVSRSBpZD49JHN0YXJ0aWQgQU5EIGFyY3Jhbms9MCAiKTsNDQppZigkZW5kaWQgPiAkc3RhcnRpZCAmJiAkc3RhcnRpZCA+IDApICRnd2hlcmUgLj0gIiBBTkQgaWQgPD0gJGVuZGlkICI7DQ0KDQ0KaWYoJHR5cGVpZCE9MCkgew0NCiAgICAkaWRzID0gR2V0U29uSWRzKCR0eXBlaWQpOw0NCiAgICAkZ3doZXJlIC49ICIgQU5EIHR5cGVpZCBpbigkaWRzKSAiOw0NCn0NDQoNDQppZigkaWRzcWw9PScnKSAkaWRzcWwgPSAkZ3doZXJlOw0NCg0NCmlmKCRzZWx0aW1lPT0xKQ0NCnsNDQogICAgJHQxID0gR2V0TWtUaW1lKCRzdGltZSk7DQ0KICAgICR0MiA9IEdldE1rVGltZSgkZXRpbWUpOw0NCiAgICAkaWRzcWwgLj0gIiBBbmQgKHNlbmRkYXRlID49ICR0MSBBbmQgc2VuZGRhdGUgPD0gJHQyKSAiOw0NCn0NDQplbHNlIGlmKGlzc2V0KCR0MSkgJiYgaXNfbnVtZXJpYygkdDEpKQ0NCnsNDQogICAgJGlkc3FsIC49ICIgQW5kIHNlbmRkYXRlID49ICR0MSAiOw0NCn0NDQoNDQovL+e7n+iuoeiusOW9leaAu+aVsA0NCmlmKCR0b3RhbG51bT09MCkNDQp7DQ0KICAgICRyb3cgPSAkZHNxbC0+R2V0T25lKCJTRUxFQ1QgQ09VTlQoKikgQVMgZGQgRlJPTSBgI0BfX2FyY3RpbnlgICRpZHNxbCIpOw0NCiAgICAkdG90YWxudW0gPSAkcm93WydkZCddOw0NCiAgICAvL+a4heepuue8k+WtmA0NCiAgICAkZHNxbC0+RXhlY3V0ZU5vbmVRdWVyeSgiREVMRVRFIEZST00gYCNAX19hcmNjYWNoZWAgIik7DQ0KfQ0NCg0NCi8v6I635Y+W6K6w5b2V77yM5bm255Sf5oiQSFRNTA0NCmlmKCR0b3RhbG51bSA+ICRzdGFydGRkKyRwYWdlc2l6ZSkgDQ0Kew0NCiAgICAkbGltaXRTcWwgPSAiIExJTUlUICRzdGFydGRkLCRwYWdlc2l6ZSI7DQ0KfQ0NCmVsc2Ugew0NCiAgICAkbGltaXRTcWwgPSAiIExJTUlUICRzdGFydGRkLCIuKCR0b3RhbG51bSAtICRzdGFydGRkKTsNDQp9DQ0KDQ0KJHRqbnVtID0gJHN0YXJ0ZGQ7DQ0KaWYoZW1wdHkoJHNzdGltZSkpICRzc3RpbWUgPSB0aW1lKCk7DQ0KDQ0KLy/lpoLmnpznlJ/miJDmlbDph4/lpKfkuo41MDDvvIzlubbkuJTmsqHpgInmoI/nm67vvIzmjInmoI/nm67mjpLluo/nlJ/miJANDQppZigkdG90YWxudW0gPiA1MDAgJiYgZW1wdHkoJHR5cGVpZCkpIA0NCnsNDQogICAgJGRzcWwtPkV4ZWN1dGUoJ291dCcsIlNFTEVDVCBpZCBGUk9NIGAjQF9fYXJjdGlueWAgJGlkc3FsIE9SREVSIEJZIHR5cGVpZCBBU0MgJGxpbWl0U3FsIik7DQ0KfSBlbHNlIHsNDQogICAgJGRzcWwtPkV4ZWN1dGUoJ291dCcsIlNFTEVDVCBpZCBGUk9NIGAjQF9fYXJjdGlueWAgJGlkc3FsICRsaW1pdFNxbCIpOw0NCn0NDQppZigkY2ZnX3JlbW90ZV9zaXRlPT0nWScgJiYgJGlzcmVtb3RlPT0iMSIpDQ0KeyAgICANDQogICAgaWYoJHNlcnZpdGVybSE9IiIpDQ0KICAgIHsNDQogICAgICAgIGxpc3QoJHNlcnZ1cmwsICRzZXJ2dXNlciwgJHNlcnZwd2QpID0gZXhwbG9kZSgnLCcsICRzZXJ2aXRlcm0pOw0NCiAgICAgICAgJGNvbmZpZyA9IGFycmF5KCAnaG9zdG5hbWUnID0+ICRzZXJ2dXJsLCAndXNlcm5hbWUnID0+ICRzZXJ2dXNlciwgDQ0KICAgICAgICAgICAgICAgICAgICAgICAgICdwYXNzd29yZCcgPT4gJHNlcnZwd2QsJ2RlYnVnJyA9PiAnVFJVRScpOw0NCiAgICB9IGVsc2Ugew0NCiAgICAgICAgJGNvbmZpZz1hcnJheSgpOw0NCiAgICB9DQ0KICAgIGlmKCEkZnRwLT5jb25uZWN0KCRjb25maWcpKSBleGl0KCdFcnJvcjpOb25lIEZUUCBDb25uZWN0aW9uIScpOw0NCn0NDQoNDQp3aGlsZSgkcm93PSRkc3FsLT5HZXRPYmplY3QoJ291dCcpKQ0NCnsNDQogICAgJHRqbnVtKys7DQ0KICAgICRpZCA9ICRyb3ctPmlkOw0NCiAgICAkYWMgPSBuZXcgQXJjaGl2ZXMoJGlkKTsNDQogICAgJHJ1cmwgPSAkYWMtPk1ha2VIdG1sKCRpc3JlbW90ZSk7DQ0KfQ0NCg0NCiR0MiA9IEV4ZWNUaW1lKCk7DQ0KJHQyID0gKCR0MiAtICRlc3QxKTsNDQokdHRpbWUgPSB0aW1lKCkgLSAkc3N0aW1lOw0NCiR0dGltZSA9IG51bWJlcl9mb3JtYXQoKCR0dGltZSAvIDYwKSwyKTsNDQoNDQovL+i/lOWbnuaPkOekuuS/oeaBrw0NCiR0amxlbiA9ICR0b3RhbG51bT4wID8gY2VpbCggKCR0am51bS8kdG90YWxudW0pICogMTAwICkgOiAxMDA7DQ0KJGR2bGVuID0gJHRqbGVuICogMjsNDQokdGpzdGEgPSAiPGRpdiBzdHlsZT0nd2lkdGg6MjAwO2hlaWdodDoxNTtib3JkZXI6MXB4IHNvbGlkICM4OTg5ODk7dGV4dC1hbGlnbjpsZWZ0Jz48ZGl2IHN0eWxlPSd3aWR0aDokZHZsZW47aGVpZ2h0OjE1O2JhY2tncm91bmQtY29sb3I6IzgyOUQ4Myc+PC9kaXY+PC9kaXY+IjsNDQppZigkY2ZnX3JlbW90ZV9zaXRlPT0nWScgJiYgJGlzcmVtb3RlPT0iMSIpICR0anN0YSAuPSAiPGJyLz48Zm9udCBjb2xvcj0ncmVkJz7mgqjlt7LlvIDlkK/ov5znqIvlj5HluIPlip/og70s55Sf5oiQ6YCf5bqm5Lya5q+U6L6D5oWiLOivt+aCqOiAkOW/g+etieW+hS4uPC9mb250PiI7DQ0KJHRqc3RhIC49ICI8YnIvPuacrOasoeeUqOaXtu+8miIubnVtYmVyX2Zvcm1hdCgkdDIsMikuIu+8jOaAu+eUqOaXtu+8miR0dGltZSDliIbpkp/vvIzliLDovr7kvY3nva7vvJoiLigkc3RhcnRkZCskcGFnZXNpemUpLiI8YnIvPuWujOaIkOWIm+W7uuaWh+S7tuaAu+aVsOeahO+8miR0amxlbiAl77yM57un57ut5omn6KGM5Lu75YqhLi4uIjsNDQoNDQoNDQovL+mAn+W6pua1i+ivlQ0NCi8qDQ0KaWYoJHN0YXJ0ZGQgPiAxMDAwKQ0NCnsNDQogICAgU2hvd01zZygi55Sf5oiQ5paH5Lu277yaMTAwMCDmgLvnlKjml7bvvJp7JHR0aW1lfSDliIbpkp8iLCAiamF2YXNjcmlwdDo7Iik7DQ0KICAgIGV4aXQoKTsNDQp9DQ0KKi8NDQoNDQppZigkdGpudW0gPCAkdG90YWxudW0pDQ0Kew0NCiAgICAkbnVybCAgPSAibWFrZWh0bWxfYXJjaGl2ZXNfYWN0aW9uX3dhcC5waHA/ZW5kaWQ9JGVuZGlkJnN0YXJ0aWQ9JHN0YXJ0aWQmdHlwZWlkPSR0eXBlaWQiOw0NCiAgICAkbnVybCAuPSAiJnRvdGFsbnVtPSR0b3RhbG51bSZzdGFydGRkPSIuKCRzdGFydGRkKyRwYWdlc2l6ZSkuIiZwYWdlc2l6ZT0kcGFnZXNpemUiOw0NCiAgICAkbnVybCAuPSAiJnNlbHRpbWU9JHNlbHRpbWUmc3N0aW1lPSRzc3RpbWUmc3RpbWU9Ii51cmxlbmNvZGUoJHN0aW1lKS4iJmV0aW1lPSIudXJsZW5jb2RlKCRldGltZSkuIiZ1cHR5cGU9JHVwdHlwZSZta3ZhbHVlPSRta3ZhbHVlJmlzcmVtb3RlPXskaXNyZW1vdGV9JnNlcnZpdGVybT17JHNlcnZpdGVybX0iOw0NCiAgICBTaG93TXNnKCR0anN0YSwkbnVybCwwLDEwMCk7DQ0KICAgIGV4aXQoKTsNDQp9DQ0KZWxzZQ0NCnsNDQogICAgaWYoJHR5cGVpZCE9JycpDQ0KICAgIHsNDQogICAgICAgICAgU2hvd01zZygi55Sf5oiQ5paH5Lu277yaJHRvdGFsbnVtIOaAu+eUqOaXtu+8mnskdHRpbWV9IOWIhumSn++8jOeOsOi9rOWQkeW9k+WJjeagj+ebruabtOaWsCZndDsmZ3Q7IiwibWFrZWh0bWxfbGlzdF9hY3Rpb25fd2FwLnBocD90eXBlaWQ9JHR5cGVpZCZ1cHR5cGU9YWxsJm1heHBhZ2VzaXplPTUwJnVwbmV4dD0xJmlzcmVtb3RlPXskaXNyZW1vdGV9JnNlcnZpdGVybT17JHNlcnZpdGVybX0iKTsNDQogICAgfQ0NCiAgICBlbHNlDQ0KICAgIHsNDQogICAgICAgIGlmKCR1cHR5cGU9PScnKSANDQogICAgICAgIHsNDQogICAgICAgICAgICBTaG93TXNnKCLlrozmiJDmiYDmnInliJvlu7rku7vliqHvvIHvvIznlJ/miJDmlofku7bvvJokdG90YWxudW0g5oC755So5pe277yaeyR0dGltZX0g5YiG6ZKf44CCIiwiamF2YXNjcmlwdDo7Iik7DQ0KICAgICAgICB9IGVsc2Ugew0NCiAgICAgICAgICAgIFNob3dNc2coIuWujOaIkOaWh+aho0hUTUzmm7TmlrDku7vliqHvvIznjrDlnKjlvIDlp4vov5vooYzkuLvpobXmm7TmlrAuLi4iLCJtYWtlaHRtbF9hbGxfd2FwLnBocD9hY3Rpb249bWFrZSZzdGVwPTMmdXB0eXBlPSR1cHR5cGUmbWt2YWx1ZT0kbWt2YWx1ZSIpOw0NCiAgICAgICAgfQ0NCiAgICB9DQ0KfQ==
</file>
<file type='file' name='makehtml_list_wap.php'>
PD9waHANDQovKioNDQogKiDnlJ/miJDliJfooajmoI/nm64NDQogKg0NCiAqIEB2ZXJzaW9uICAgICAgICAkSWQ6IG1ha2VodG1sX2xpc3QucGhwIDEgMTE6MDkgMjAxMOW5tDfmnIgxOeaXpVogdGlhbnlhICQNDQogKiBAcGFja2FnZSAgICAgICAgRGVkZUNNUy5BZG1pbmlzdHJhdG9yDQ0KICogQGNvcHlyaWdodCAgICAgIENvcHlyaWdodCAoYykgMjAwNyAtIDIwMTAsIERlc0RldiwgSW5jLg0NCiAqIEBsaWNlbnNlICAgICAgICBodHRwOi8vaGVscC5kZWRlY21zLmNvbS91c2Vyc2d1aWRlL2xpY2Vuc2UuaHRtbA0NCiAqIEBsaW5rICAgICAgICAgICBodHRwOi8vd3d3LmRlZGVjbXMuY29tDQ0KICovDQ0KcmVxdWlyZV9vbmNlKGRpcm5hbWUoX19GSUxFX18pLiIvY29uZmlnLnBocCIpOw0NCnJlcXVpcmVfb25jZShERURFSU5DLiIvdHlwZWxpbmsuY2xhc3MucGhwIik7DQ0KaW5jbHVkZSBEZWRlSW5jbHVkZSgndGVtcGxldHMvbWFrZWh0bWxfbGlzdF93YXAuaHRtJyk7
</file>
<file type='file' name='makehtml_list_action_wap.php'>
PD9waHANDQovKioNDQogKiDnlJ/miJDliJfooajmoI/nm67mk43kvZwNDQogKg0NCiAqIEB2ZXJzaW9uICAgICAgICAkSWQ6IG1ha2VodG1sX2xpc3RfYWN0aW9uLnBocCAxIDExOjA5IDIwMTDlubQ35pyIMTnml6VaIHRpYW55YSAkDQ0KICogQHBhY2thZ2UgICAgICAgIERlZGVDTVMuQWRtaW5pc3RyYXRvcg0NCiAqIEBjb3B5cmlnaHQgICAgICBDb3B5cmlnaHQgKGMpIDIwMDcgLSAyMDEwLCBEZXNEZXYsIEluYy4NDQogKiBAbGljZW5zZSAgICAgICAgaHR0cDovL2hlbHAuZGVkZWNtcy5jb20vdXNlcnNndWlkZS9saWNlbnNlLmh0bWwNDQogKiBAbGluayAgICAgICAgICAgaHR0cDovL3d3dy5kZWRlY21zLmNvbQ0NCiAqLw0NCiBzZXRfdGltZV9saW1pdCgwKTsgDQ0KcmVxdWlyZV9vbmNlKGRpcm5hbWUoX19GSUxFX18pLiIvY29uZmlnLnBocCIpOw0NCkNoZWNrUHVydmlldygnc3lzX01ha2VIdG1sJyk7DQ0KcmVxdWlyZV9vbmNlKERFREVEQVRBLiIvY2FjaGUvaW5jX2NhdGFsb2dfYmFzZS5pbmMiKTsNDQpyZXF1aXJlX29uY2UoREVERUlOQy4iL2NoYW5uZWx1bml0LmZ1bmMucGhwIik7DQ0KDQ0KDQ0KaWYoIWlzc2V0KCR1cG5leHQpKSAkdXBuZXh0ID0gMTsNDQppZihlbXB0eSgkZ290eXBlKSkgJGdvdHlwZSA9ICcnOw0NCmlmKGVtcHR5KCRwYWdlbm8pKSAkcGFnZW5vID0gMDsNDQppZihlbXB0eSgkbWtwYWdlKSkgJG1rcGFnZSA9IDE7DQ0KaWYoZW1wdHkoJHR5cGVpZCkpICR0eXBlaWQgPSAwOw0NCmlmKCFpc3NldCgkdXBwYWdlKSkgJHVwcGFnZSA9IDA7DQ0KaWYoZW1wdHkoJG1heHBhZ2VzaXplKSkgJG1heHBhZ2VzaXplID0gNTA7DQ0KJGFkbWluSUQgPSAkY3VzZXJMb2dpbi0+Z2V0VXNlcklEKCk7DQ0KDQ0KJGlzcmVtb3RlID0gKGVtcHR5KCRpc3JlbW90ZSkgID8gMCA6ICRpc3JlbW90ZSk7DQ0KJHNlcnZpdGVybSA9IGVtcHR5KCRzZXJ2aXRlcm0pPyAiIiA6ICRzZXJ2aXRlcm07DQ0KDQ0KLy/mo4DmtYvojrflj5bmiYDmnInmoI/nm65JRA0NCi8v5pmu6YCa55Sf5oiQ5oiW5LiA6ZSu5pu05paw5pe25pu05paw5omA5pyJ5qCP55uuDQ0KaWYoJGdvdHlwZT09JycgfHwgJGdvdHlwZT09J21rYWxsY3QnKQ0NCnsNDQogICAgaWYoJHVwbmV4dD09MSB8fCAkdHlwZWlkPT0wKQ0NCiAgICB7DQ0KICAgICAgICBpZigkdHlwZWlkPjApIA0NCiAgICAgICAgew0NCiAgICAgICAgICAgICR0aWRzcyA9IEdldFNvbklkcygkdHlwZWlkLDApOw0NCiAgICAgICAgICAgICRpZEFycmF5ID0gZXhwbG9kZSgnLCcsJHRpZHNzKTsNDQogICAgICAgIH0gZWxzZSB7DQ0KICAgICAgICAgICAgZm9yZWFjaCgkY2ZnX0NzIGFzICRrPT4kdikgJGlkQXJyYXlbXSA9ICRrOw0NCiAgICAgICAgfQ0NCiAgICB9IGVsc2Ugew0NCiAgICAgICAgJGlkQXJyYXkgPSBhcnJheSgpOw0NCiAgICAgICAgJGlkQXJyYXlbXSA9ICR0eXBlaWQ7DQ0KICAgIH0NDQp9DQ0KLy/kuIDplK7mm7TmlrDluKbnvJPlrZjnmoTmg4XlhrUNDQplbHNlIGlmKCRnb3R5cGU9PSdta2FsbCcpDQ0Kew0NCiAgICAkdXBwYWdlID0gMTsNDQogICAgJG1rY2FjaGVmaWxlID0gREVERURBVEEuIi9ta2FsbF9jYWNoZV97JGFkbWluSUR9LnBocCI7DQ0KICAgICRpZEFycmF5ID0gYXJyYXkoKTsNDQogICAgaWYoZmlsZV9leGlzdHMoJG1rY2FjaGVmaWxlKSkgcmVxdWlyZV9vbmNlKCRta2NhY2hlZmlsZSk7DQ0KfQ0NCg0NCi8v5b2T5YmN5pu05paw5qCP55uu55qESUQNDQokdG90YWxwYWdlPWNvdW50KCRpZEFycmF5KTsNDQppZihpc3NldCgkaWRBcnJheVskcGFnZW5vXSkpDQ0Kew0NCiAgICAkdGlkID0gJGlkQXJyYXlbJHBhZ2Vub107DQ0KfQ0NCmVsc2UNDQp7DQ0KICAgIGlmKCRnb3R5cGU9PScnKQ0NCiAgICB7DQ0KICAgICAgICBTaG93TXNnKCLlrozmiJDmiYDmnInliJfooajmm7TmlrDvvIEiLCJqYXZhc2NyaXB0OjsiKTsNDQogICAgICAgIGV4aXQoKTsNDQogICAgfQ0NCiAgICBlbHNlIGlmKCRnb3R5cGU9PSdta2FsbCcgfHwgJGdvdHlwZT09J21rYWxsY3QnKQ0NCiAgICB7DQ0KICAgICAgICBTaG93TXNnKCLlrozmiJDmiYDmnInmoI/nm67liJfooajmm7TmlrDvvIznjrDlnKjkvZzmnIDlkI7mlbDmja7kvJjljJbvvIEiLCJtYWtlaHRtbF9hbGxfd2FwLnBocD9hY3Rpb249bWFrZSZzdGVwPTEwIik7DQ0KICAgICAgICBleGl0KCk7DQ0KICAgIH0NDQp9DQ0KDQ0KaWYoJHBhZ2Vubz09MCAmJiAkbWtwYWdlPT0xKSAvL+a4heepuue8k+WtmA0NCnsNDQogICAgJGRzcWwtPkV4ZWN1dGVOb25lUXVlcnkoIkRlbGV0ZSBGcm9tIGAjQF9fYXJjY2FjaGVgICIpOw0NCn0NDQoNDQokcmV1cmwgPSAnJzsNDQoNDQovL+abtOaWsOaVsOe7hOaJgOiusOW9leeahOagj+ebrg0NCmlmKCFlbXB0eSgkdGlkKSkNDQp7DQ0KICAgIGlmKCFpc3NldCgkY2ZnX0NzWyR0aWRdKSkNDQogICAgew0NCiAgICAgICAgc2hvd21zZygn5rKh5pyJ6K+l5qCP55uu5pWw5o2uLCDlj6/og73nvJPlrZjmlofku7YoL2RhdGEvY2FjaGUvaW5jX2NhdGFsb2dfYmFzZS5pbmMp5rKh5pyJ5pu05pawLCDor7fmo4Dmn6XmmK/lkKbmnInlhpnlhaXmnYPpmZAnKTsNDQogICAgICAgIGV4aXQoKTsNDQogICAgfQ0NCiAgICBpZigkY2ZnX0NzWyR0aWRdWzFdPjApDQ0KICAgIHsNDQogICAgICAgIHJlcXVpcmVfb25jZShERURFSU5DLiIvYXJjLmxpc3R2aWV3LmNsYXNzX3dhcC5waHAiKTsNDQogICAgICAgICRsdiA9IG5ldyBMaXN0VmlldygkdGlkKTsNDQogICAgICAgICRwb3NpdGlvbj0gTWZUeXBlZGlyKCRsdi0+RmllbGRzWyd0eXBlZGlyJ10pOw0NCiAgICB9DQ0KICAgIGVsc2UNDQogICAgew0NCiAgICAgICAgcmVxdWlyZV9vbmNlKERFREVJTkMuIi9hcmMuc2dsaXN0dmlld19tLmNsYXNzLnBocCIpOw0NCiAgICAgICAgJGx2ID0gbmV3IFNnTGlzdFZpZXcoJHRpZCk7ICAgICAgICANDQogICAgfQ0NCiAgICAkbHYtPkNvdW50UmVjb3JkKCk7DQ0KICAgIGlmKCRsdi0+VHlwZUxpbmstPlR5cGVJbmZvc1snaXNwYXJ0J109PTAgJiYgJGx2LT5UeXBlTGluay0+VHlwZUluZm9zWydpc2RlZmF1bHQnXSE9LTEpICRudG90YWxwYWdlID0gJGx2LT5Ub3RhbFBhZ2U7DQ0KICAgIGVsc2UgJG50b3RhbHBhZ2UgPSAxOw0NCiAgICBpZigkY2ZnX3JlbW90ZV9zaXRlPT0nWScgJiYgJGlzcmVtb3RlPT0iMSIpDQ0KICAgIHsNDQogICAgICAgIGlmKCRzZXJ2aXRlcm0hPSIiKQ0NCiAgICAgICAgew0NCiAgICAgICAgICAgIGxpc3QoJHNlcnZ1cmwsICRzZXJ2dXNlciwgJHNlcnZwd2QpID0gZXhwbG9kZSgnLCcsJHNlcnZpdGVybSk7DQ0KICAgICAgICAgICAgJGNvbmZpZyA9IGFycmF5KCAnaG9zdG5hbWUnID0+ICRzZXJ2dXJsLCAndXNlcm5hbWUnID0+ICRzZXJ2dXNlciwgDQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncGFzc3dvcmQnID0+ICRzZXJ2cHdkLCdkZWJ1ZycgPT4gJ1RSVUUnKTsNDQogICAgICAgIH0gZWxzZSB7DQ0KICAgICAgICAgICAgJGNvbmZpZz1hcnJheSgpOw0NCiAgICAgICAgfQ0NCiAgICAgICAgaWYoISRmdHAtPmNvbm5lY3QoJGNvbmZpZykpIGV4aXQoJ0Vycm9yOk5vbmUgRlRQIENvbm5lY3Rpb24hJyk7DQ0KICAgIH0NDQogICAgLy/lpoLmnpzmoI/nm67nmoTmlofmoaPlpKrlpJrvvIzliIblpJrmibnmrKHmm7TmlrANDQogICAgaWYoJG50b3RhbHBhZ2UgPD0gJG1heHBhZ2VzaXplIHx8ICRsdi0+VHlwZUxpbmstPlR5cGVJbmZvc1snaXNwYXJ0J10hPTAgfHwgJGx2LT5UeXBlTGluay0+VHlwZUluZm9zWydpc2RlZmF1bHQnXT09LTEpDQ0KICAgIHsNDQogICAgICAgICRyZXVybCA9ICRsdi0+TWFrZUh0bWwoJycsICcnLCAkaXNyZW1vdGUpOw0NCiAgICAgICAgJGZpbmlzaFR5cGUgPSBUUlVFOw0NCiAgICB9DQ0KICAgIGVsc2UNDQogICAgew0NCiAgICAgICAgJHJldXJsID0gJGx2LT5NYWtlSHRtbCgkbWtwYWdlLCAkbWF4cGFnZXNpemUsICRpc3JlbW90ZSk7DQ0KICAgICAgICAkZmluaXNoVHlwZSA9IEZBTFNFOw0NCiAgICAgICAgJG1rcGFnZSA9ICRta3BhZ2UgKyAkbWF4cGFnZXNpemU7DQ0KICAgICAgICBpZiggJG1rcGFnZSA+PSAoJG50b3RhbHBhZ2UrMSkgKSAkZmluaXNoVHlwZSA9IFRSVUU7DQ0KICAgIH0NDQp9DQ0KDQ0KJG5leHRwYWdlID0gJHBhZ2VubysxOw0NCmlmKCRuZXh0cGFnZSA+PSAkdG90YWxwYWdlICYmICRmaW5pc2hUeXBlKQ0NCnsNDQogICAgaWYoJGdvdHlwZT09JycpDQ0KICAgIHsNDQogICAgICAgIGlmKGVtcHR5KCRyZXVybCkpIHsgJHJldXJsID0gJy4uL3BsdXMvbGlzdC5waHA/dGlkPScuJHRpZDsgfQ0NCiAgICAgICAgU2hvd01zZygi5a6M5oiQ5omA5pyJ5qCP55uu5YiX6KGo5pu05paw77yBIiwiamF2YXNjcmlwdDo7Iik7DQ0KICAgICAgICBleGl0KCk7DQ0KICAgIH0NDQogICAgZWxzZSBpZigkZ290eXBlPT0nbWthbGwnIHx8ICRnb3R5cGU9PSdta2FsbGN0JykNDQogICAgew0NCiAgICAgICAgU2hvd01zZygi5a6M5oiQ5omA5pyJ5qCP55uu5YiX6KGo5pu05paw77yM546w5Zyo5L2c5pyA5ZCO5pWw5o2u5LyY5YyW77yBIiwibWFrZWh0bWxfYWxsX3dhcC5waHA/YWN0aW9uPW1ha2Umc3RlcD0xMCIpOw0NCiAgICAgICAgZXhpdCgpOw0NCiAgICB9DQ0KfSBlbHNlIHsNDQogICAgaWYoJGZpbmlzaFR5cGUpDQ0KICAgIHsNDQogICAgICAgICRnb3VybCA9ICJtYWtlaHRtbF9saXN0X2FjdGlvbl93YXAucGhwP2dvdHlwZT17JGdvdHlwZX0mdXBwYWdlPSR1cHBhZ2UmbWF4cGFnZXNpemU9JG1heHBhZ2VzaXplJnR5cGVpZD0kdHlwZWlkJnBhZ2Vubz0kbmV4dHBhZ2UmaXNyZW1vdGU9eyRpc3JlbW90ZX0mc2Vydml0ZXJtPXskc2Vydml0ZXJtfSI7DQ0KICAgICAgICBTaG93TXNnKCLmiJDlip/liJvlu7rmoI/nm67vvJoiLiR0aWQuIu+8jOe7p+e7rei/m+ihjOaTjeS9nO+8gSIsJGdvdXJsLDAsMTAwKTsNDQogICAgICAgIGV4aXQoKTsNDQogICAgfSBlbHNlIHsNDQogICAgICAgICRnb3VybCA9ICJtYWtlaHRtbF9saXN0X2FjdGlvbl93YXAucGhwP2dvdHlwZT17JGdvdHlwZX0mdXBwYWdlPSR1cHBhZ2UmbWtwYWdlPSRta3BhZ2UmbWF4cGFnZXNpemU9JG1heHBhZ2VzaXplJnR5cGVpZD0kdHlwZWlkJnBhZ2Vubz0kcGFnZW5vJmlzcmVtb3RlPXskaXNyZW1vdGV9JnNlcnZpdGVybT17JHNlcnZpdGVybX0iOw0NCiAgICAgICAgU2hvd01zZygi5qCP55uu77yaIi4kdGlkLiLvvIznu6fnu63ov5vooYzmk43kvZwuLi4iLCRnb3VybCwwLDEwMCk7DQ0KICAgICAgICBleGl0KCk7DQ0KICAgIH0NDQp9
</file>
<file type='file' name='templets/makehtml_list_wap.htm'>
PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0NCjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4NDQo8aGVhZD4NDQo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD08P3BocCBlY2hvICRjZmdfc29mdF9sYW5nOyA/PiI+DQ0KPHRpdGxlPuabtOaWsOagj+ebrkhUTUw8L3RpdGxlPg0NCjxsaW5rIGhyZWY9ImNzcy9iYXNlLmNzcyIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyI+DQ0KPC9oZWFkPg0NCjxib2R5IGJhY2tncm91bmQ9ImltYWdlcy9hbGxiZy5naWYiIGxlZnRtYXJnaW49JzgnIHRvcG1hcmdpbj0nOCc+DQ0KPHRhYmxlIHdpZHRoPSI5OCUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjMiIGNlbGxzcGFjaW5nPSIxIiBiZ2NvbG9yPSIjRDZENkQ2IiBhbGlnbj0iY2VudGVyIj4NDQogIDxmb3JtIG5hbWU9ImZvcm0xIiBhY3Rpb249Im1ha2VodG1sX2xpc3RfYWN0aW9uX3dhcC5waHAiIG1ldGhvZD0iZ2V0IiB0YXJnZXQ9J3N0YWZybSc+DQ0KICAgIDx0cj4gDQ0KICAgICAgPHRkIGhlaWdodD0iMjgiIGNvbHNwYW49IjIiIGJhY2tncm91bmQ9J2ltYWdlcy90YmcuZ2lmJz4NDQogICAgICAJPHRhYmxlIHdpZHRoPSI5OCUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4NDQogICAgICAgICAgPHRyPiANDQogICAgICAgICAgICA8dGQgd2lkdGg9IjMwJSIgaGVpZ2h0PSIxOCIgc3R5bGU9InBhZGRpbmctbGVmdDoxMHB4OyI+PHN0cm9uZz7mm7TmlrB3YXDmoI/nm65IVE1M77yaPC9zdHJvbmc+PC90ZD4NDQogICAgICAgICAgICA8dGQgd2lkdGg9IjcwJSIgYWxpZ249InJpZ2h0Ij4NDQogICAgICAgICAgICAJPGEgaHJlZj0ibWFrZWh0bWxfYXJjaGl2ZXNfd2FwLnBocD90eXBlaWQ9PD9waHAgZWNobyAoaXNzZXQoJHR5cGVpZCkgPyAkdHlwZWlkIDogMCk7ID8+IiBjbGFzcz0ibnAgY29vbGJnIj7mm7TmlrDmlofmoaNIVE1MPC9hPg0NCiAgICAgICAgICAgIAk8YSBocmVmPSJjYXRhbG9nX21haW4ucGhwIiBjbGFzcz0ibnAgY29vbGJnIj7moI/nm67nrqHnkIY8L2E+DQ0KICAgICAgICAgICAgPC90ZD4NDQogICAgICAgICAgPC90cj4NDQogICAgICAgIDwvdGFibGU+DQ0KICAgICAgPC90ZD4NDQogICAgPC90cj4NDQogICAgPHRyPiANDQogICAgICA8dGQgd2lkdGg9IjEwOCIgdmFsaWduPSJ0b3AiIGJnY29sb3I9IiNGRkZGRkYiPumAieaLqeagj+ebru+8mjwvdGQ+DQ0KICAgICAgPHRkIHdpZHRoPSIzNzciIHZhbGlnbj0idG9wIiBiZ2NvbG9yPSIjRkZGRkZGIj4gDQ0KICAgIDw/cGhwDQ0KICAgICAgIGlmKGVtcHR5KCRjaWQpKSAkY2lkPTA7DQ0KICAgICAgICR0bCA9IG5ldyBUeXBlTGluaygkY2lkKTsNDQogICAgICAgJHR5cGVPcHRpb25zID0gJHRsLT5HZXRPcHRpb25BcnJheSgkY2lkLCRhZG1pbl9jYXRhbG9ncywwLDEpOw0NCiAgICAgICBlY2hvICI8c2VsZWN0IG5hbWU9J3R5cGVpZCcgc3R5bGU9J3dpZHRoOjMwMHB4Jz5cclxuIjsNDQogICAgICAgaWYoJGNpZD09JzAnKSBlY2hvICI8b3B0aW9uIHZhbHVlPScwJyBzZWxlY3RlZD0nMSc+5pu05paw5omA5pyJ5qCP55uuLi4uPC9vcHRpb24+XHJcbiI7DQ0KICAgICAgIGVjaG8gJHR5cGVPcHRpb25zOw0NCiAgICAgICBlY2hvICI8L3NlbGVjdD4iOw0NCgkJPz4NDQogICAgICA8L3RkPg0NCiAgICA8L3RyPg0NCiAgICA8dHI+DQ0KICAgICAgPHRkIGhlaWdodD0iMjAiIHZhbGlnbj0idG9wIiBiZ2NvbG9yPSIjRkZGRkZGIj7mr4/mrKHmnIDlpKfliJvlu7rpobXmlbDvvJo8L3RkPg0NCiAgICAgIDx0ZCBoZWlnaHQ9IjIwIiB2YWxpZ249InRvcCIgYmdjb2xvcj0iI0ZGRkZGRiI+PGlucHV0IG5hbWU9Im1heHBhZ2VzaXplIiB0eXBlPSJ0ZXh0IiBpZD0ibWF4cGFnZXNpemUiIHZhbHVlPSI1MCIgc2l6ZT0iMTAiPg0NCiAgICAgICAg5Liq5paH5Lu2IDwvdGQ+DQ0KICAgIDwvdHI+DQ0KICAgIDx0cj4gDQ0KICAgICAgPHRkIGhlaWdodD0iMjAiIHZhbGlnbj0idG9wIiBiZ2NvbG9yPSIjRkZGRkZGIj7mmK/lkKbmm7TmlrDlrZDmoI/nm67vvJo8L3RkPg0NCiAgICAgIDx0ZCBoZWlnaHQ9IjIwIiB2YWxpZ249InRvcCIgYmdjb2xvcj0iI0ZGRkZGRiI+DQ0KCSAgPGlucHV0IG5hbWU9InVwbmV4dCIgdHlwZT0icmFkaW8iIGNsYXNzPSJucCIgdmFsdWU9IjEiIGNoZWNrZWQ9JzEnIC8+DQ0KICAgICDmm7TmlrDlrZDnuqfmoI/nm64gIA0NCiAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9InVwbmV4dCIgY2xhc3M9Im5wIiB2YWx1ZT0iMCIgLz4NDQogICAgIOS7heabtOaWsOaJgOmAieagj+ebrg0NCiAgICA8L3RkPg0NCiAgICA8L3RyPg0NCiAgICA8dHI+IA0NCiAgICAgIDx0ZCBoZWlnaHQ9IjIwIiBjb2xzcGFuPSIyIiBiZ2NvbG9yPSIjZmZmZmZmIiBhbGlnbj0iY2VudGVyIj4NDQogICAgICAJPGlucHV0IG5hbWU9ImIxMTIiIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNvb2xiZyBucCIgdmFsdWU9IuW8gOWni+eUn+aIkEhUTUwiIG9uQ2xpY2s9ImRvY3VtZW50LmZvcm0xLnN1Ym1pdCgpOyIgc3R5bGU9IndpZHRoOjEwMHB4Ij4NDQogICAgICAgICAgIDw/cGhwIA0NCiAgICAgIGlmKCRjZmdfcmVtb3RlX3NpdGU9PSdZJykNDQogICAgICB7DQ0KICAgID8+IOOAgA0NCiAgICAgICAgPGlucHV0IG5hbWU9ImlzcmVtb3RlIiB0eXBlPSJjaGVja2JveCIgaWQ9ImlzcmVtb3RlIiB2YWx1ZT0iMSI+5piv5ZCm5ZCM5q2l6L+c56iL5Y+R5biDDQ0KICAgICAgICAgPD9waHAgR2V0RnRwKCk7Pz4NDQogICA8P3BocA0NCiAgICAgIH0NDQogICAgPz4gICAgIA0NCiAgICAgIDwvdGQ+DQ0KICAgIDwvdHI+DQ0KICA8L2Zvcm0+DQ0KICA8dHIgYmdjb2xvcj0iI0Y5RkNFRiI+IA0NCiAgICA8dGQgaGVpZ2h0PSIyMCIgY29sc3Bhbj0iMiI+IDx0YWJsZSB3aWR0aD0iMTAwJSI+DQ0KICAgICAgICA8dHI+IA0NCiAgICAgICAgICA8dGQgd2lkdGg9Ijc0JSI+6L+b6KGM54q25oCB77yaIDwvdGQ+DQ0KICAgICAgICAgIDx0ZCB3aWR0aD0iMjYlIiBhbGlnbj0icmlnaHQiPiA8c2NyaXB0IGxhbmd1YWdlPSdqYXZhc2NyaXB0Jz4NDQogICAgICAgICAgICAJZnVuY3Rpb24gUmVzaXplRGl2KG9iaix0eSkNDQogICAgICAgICAgICAJew0NCiAgICAgICAgICAgIAkJaWYodHk9PSIrIikgZG9jdW1lbnQuYWxsW29ial0uc3R5bGUucGl4ZWxIZWlnaHQgKz0gNTA7DQ0KICAgICAgICAgICAgCQllbHNlIGlmKGRvY3VtZW50LmFsbFtvYmpdLnN0eWxlLnBpeGVsSGVpZ2h0PjgwKSBkb2N1bWVudC5hbGxbb2JqXS5zdHlsZS5waXhlbEhlaWdodCA9IGRvY3VtZW50LmFsbFtvYmpdLnN0eWxlLnBpeGVsSGVpZ2h0IC0gNTA7DQ0KICAgICAgICAgICAgCX0NDQogICAgICAgICAgICAJPC9zY3JpcHQ+DQ0KICAgICAgICAgICAgWzxhIGhyZWY9JyMnIG9uQ2xpY2s9IlJlc2l6ZURpdignbWR2JywnKycpOyI+5aKe5aSnPC9hPl0gWzxhIGhyZWY9JyMnIG9uQ2xpY2s9IlJlc2l6ZURpdignbWR2JywnLScpOyI+57yp5bCPPC9hPl0gDQ0KICAgICAgICAgIDwvdGQ+DQ0KICAgICAgICA8L3RyPg0NCiAgICAgIDwvdGFibGU+PC90ZD4NDQogIDwvdHI+DQ0KICA8dHIgYmdjb2xvcj0iI0ZGRkZGRiI+IA0NCiAgICA8dGQgY29sc3Bhbj0iMiIgaWQ9Im10ZCI+DQ0KICAgIAk8ZGl2IGlkPSdtZHYnIHN0eWxlPSd3aWR0aDoxMDAlO2hlaWdodDozNTBweDsnPiANDQogICAgICAgIDxpZnJhbWUgbmFtZT0ic3RhZnJtIiBmcmFtZWJvcmRlcj0iMCIgaWQ9InN0YWZybSIgd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSI+PC9pZnJhbWU+DQ0KICAgICAgPC9kaXY+DQ0KCSAgPC90ZD4NDQogIDwvdHI+DQ0KPC90YWJsZT4NDQo8L2JvZHk+DQ0KPC9odG1sPg0NCg==
</file>
<file type='file' name='templets/makehtml_homepage_wap.htm'>
PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0NCjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4NDQo8aGVhZD4NDQo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD08P3BocCBlY2hvICRjZmdfc29mdF9sYW5nOyA/PiI+DQ0KPHRpdGxlPuS4u+mhteabtOaWsOWQkeWvvDwvdGl0bGU+DQ0KPGxpbmsgaHJlZj0iY3NzL2Jhc2UuY3NzIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIj4NDQo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0iYWxsIiBocmVmPSIuLi9pbmNsdWRlL2NhbGVuZGFyL2NhbGVuZGFyLXdpbjJrLTEuY3NzIiB0aXRsZT0id2luMmstMSIgLz4NDQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi9pbmNsdWRlL2NhbGVuZGFyL2NhbGVuZGFyLmpzIj48L3NjcmlwdD4NDQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi9pbmNsdWRlL2NhbGVuZGFyL2NhbGVuZGFyLWNuLmpzIj48L3NjcmlwdD4NDQo8c2NyaXB0IGxhbmd1YWdlPSJqYXZhc2NyaXB0Ij4NDQpmdW5jdGlvbiBTZWxlY3RUZW1wbGV0cyhmbmFtZSkNDQp7DQ0KICAgdmFyIHBvc0xlZnQgPSAyMDA7DQ0KICAgdmFyIHBvc1RvcCA9IDMwMDsNDQogICB3aW5kb3cub3BlbigiLi4vaW5jbHVkZS9kaWFsb2cvc2VsZWN0X3RlbXBsZXRzLnBocD9mPSIrZm5hbWUsICJwb3B0ZW1wV2luIiwgInNjcm9sbGJhcnM9eWVzLHJlc2l6YWJsZT15ZXMsc3RhdGViYXI9bm8sd2lkdGg9NjAwLGhlaWdodD00MDAsbGVmdD0iK3Bvc0xlZnQrIiwgdG9wPSIrcG9zVG9wKTsNDQp9DQ0KPC9zY3JpcHQ+DQ0KPC9oZWFkPg0NCjxib2R5IGJhY2tncm91bmQ9ImltYWdlcy9hbGxiZy5naWYiIGxlZnRtYXJnaW49IjgiIHRvcG1hcmdpbj0iOCI+DQ0KPHRhYmxlIHdpZHRoPSI5OCUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjMiIGNlbGxzcGFjaW5nPSIxIiBiZ2NvbG9yPSIjRDZENkQ2IiBhbGlnbj0iY2VudGVyIj4NDQogIDxmb3JtIG5hbWU9ImZvcm0xIiBhY3Rpb249Im1ha2VodG1sX2hvbWVwYWdlX3dhcC5waHAiIHRhcmdldD0ic3RhZnJtIiBtZXRob2Q9InBvc3QiPg0NCiAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZG9wb3N0IiB2YWx1ZT0ibWFrZSI+DQ0KICAgIDx0cj4gDQ0KICAgICAgPHRkIGhlaWdodD0iMjgiIGNvbHNwYW49IjIiIGJhY2tncm91bmQ9J2ltYWdlcy90YmcuZ2lmJz4NDQoJICA8dGFibGUgd2lkdGg9Ijk4JSIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPg0NCiAgICAgICAgICA8dHI+IA0NCiAgICAgICAgICAgIDx0ZCB3aWR0aD0iMzAlIiBoZWlnaHQ9IjE4IiBzdHlsZT0icGFkZGluZy1sZWZ0OjEwcHg7Ij48c3Ryb25nPndhcOS4u+mhteabtOaWsOWQkeWvvO+8mjwvc3Ryb25nPjwvdGQ+DQ0KICAgICAgICAgICAgPHRkIHdpZHRoPSI3MCUiIGFsaWduPSJyaWdodCI+Jm5ic3A7PC90ZD4NDQogICAgICAgICAgPC90cj4NDQogICAgICAgIDwvdGFibGU+DQ0KCQk8L3RkPg0NCiAgICA8L3RyPg0NCiAgIA0NCiANDQoNDQogICAgPHRyPiANDQogICAgICA8dGQgaGVpZ2h0PSIzMSIgY29sc3Bhbj0iMiIgYmdjb2xvcj0iI2ZmZmZmZiIgYWxpZ249ImNlbnRlciI+Jm5ic3A7Jm5ic3A7DQ0KDQ0KDQ0KICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgY2xhc3M9J2Nvb2xiZyBucCcgbmFtZT0iU3VibWl0IiB2YWx1ZT0i5pu05paw5Li76aG1SFRNTCIgLz4NDQogICAgICAmbmJzcDsNDQogICAgICAgICAgIDw/cGhwIA0NCiAgICAgIGlmKCRjZmdfcmVtb3RlX3NpdGU9PSdZJykNDQogICAgICB7DQ0KICAgID8+IOOAgCANDQogICAgICA8aW5wdXQgbmFtZT0iaXNyZW1vdGUiIHR5cGU9ImNoZWNrYm94IiBpZD0iaXNyZW1vdGUiIHZhbHVlPSIxIj4NDQrmmK/lkKblkIzmraXov5znqIvlj5HluIMgIDw/cGhwIEdldEZ0cCgpOz8+ICAgICA8P3BocA0NCiAgICAgIH0NDQogICAgPz4gICAgIA0NCjwvdGQ+DQ0KICAgIDwvdHI+DQ0KDQ0KICA8L2Zvcm0+DQ0KICA8dHIgYmdjb2xvcj0iI0Y5RkNFRiI+IA0NCiAgICA8dGQgaGVpZ2h0PSIyMCIgY29sc3Bhbj0iMiI+PHRhYmxlIHdpZHRoPSIxMDAlIj4NDQogICAgICAgIDx0cj4gDQ0KICAgICAgICAgIDx0ZCB3aWR0aD0iNzQlIj7ov5vooYznirbmgIHvvJogPC90ZD4NDQogICAgICAgICAgPHRkIHdpZHRoPSIyNiUiIGFsaWduPSJyaWdodCI+DQ0KCQkgICAgPHNjcmlwdCBsYW5ndWFnZT0namF2YXNjcmlwdCc+DQ0KICAgICAgICAgICAgCWZ1bmN0aW9uIFJlc2l6ZURpdihvYmosdHkpDQ0KICAgICAgICAgICAgCXsNDQogICAgICAgICAgICAJCWlmKHR5PT0iKyIpIGRvY3VtZW50LmFsbFtvYmpdLnN0eWxlLnBpeGVsSGVpZ2h0ICs9IDUwOw0NCiAgICAgICAgICAgIAkJZWxzZSBpZihkb2N1bWVudC5hbGxbb2JqXS5zdHlsZS5waXhlbEhlaWdodD44MCkgZG9jdW1lbnQuYWxsW29ial0uc3R5bGUucGl4ZWxIZWlnaHQgPSBkb2N1bWVudC5hbGxbb2JqXS5zdHlsZS5waXhlbEhlaWdodCAtIDUwOw0NCiAgICAgICAgICAgIAl9DQ0KICAgICAgICAgICAgCTwvc2NyaXB0Pg0NCiAgICAgICAgICAgIFs8YSBocmVmPScjJyBvbkNsaWNrPSJSZXNpemVEaXYoJ21kdicsJysnKTsiPuWinuWkpzwvYT5dIFs8YSBocmVmPScjJyBvbkNsaWNrPSJSZXNpemVEaXYoJ21kdicsJy0nKTsiPue8qeWwjzwvYT5dIA0NCiAgICAgICAgICA8L3RkPg0NCiAgICAgICAgPC90cj4NDQogICAgICA8L3RhYmxlPiA8L3RkPg0NCiAgPC90cj4NDQogIDx0ciBiZ2NvbG9yPSIjRkZGRkZGIj4gDQ0KICAgIDx0ZCBjb2xzcGFuPSIyIiBpZD0ibXRkIj4NDQoJCQk8ZGl2IGlkPSdtZHYnIHN0eWxlPSd3aWR0aDoxMDAlO2hlaWdodDozNTBweDsnPiANDQogICAgICAgIDxpZnJhbWUgbmFtZT0ic3RhZnJtIiBmcmFtZWJvcmRlcj0iMCIgaWQ9InN0YWZybSIgd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSI+PC9pZnJhbWU+DQ0KICAgICAgPC9kaXY+DQ0KCSAgPC90ZD4NDQogIDwvdHI+DQ0KPC90YWJsZT4NDQo8L2JvZHk+DQ0KPC9odG1sPg==
</file>
<file type='file' name='templets/makehtml_archives_wap.htm'>
PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0NCjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4NDQo8aGVhZD4NDQo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD08P3BocCBlY2hvICRjZmdfc29mdF9sYW5nOyA/PiI+DQ0KPHRpdGxlPueUn+aIkEhUTUw8L3RpdGxlPg0NCjxsaW5rIGhyZWY9ImNzcy9iYXNlLmNzcyIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyI+DQ0KPC9oZWFkPg0NCjxib2R5IGJhY2tncm91bmQ9J2ltYWdlcy9hbGxiZy5naWYnIGxlZnRtYXJnaW49JzgnIHRvcG1hcmdpbj0nOCc+DQ0KPHRhYmxlIHdpZHRoPSI5OCUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjMiIGNlbGxzcGFjaW5nPSIxIiBiZ2NvbG9yPSIjRDZENkQ2IiBhbGlnbj0iY2VudGVyIj4NDQogIDxmb3JtIG5hbWU9J2Zvcm0yJyBhY3Rpb249J2NvbnRlbnRfbGlzdC5waHAnIG1ldGhvZD0iZ2V0IiB0YXJnZXQ9J3N0YWZybSc+DQ0KICAgPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nbnVsbGZpZWxkJyB2YWx1ZT0nb2snPg0NCiAgPC9mb3JtPg0NCiAgPGZvcm0gbmFtZT0iZm9ybTEiIGFjdGlvbj0ibWFrZWh0bWxfYXJjaGl2ZXNfYWN0aW9uX3dhcC5waHAiIG1ldGhvZD0iZ2V0IiB0YXJnZXQ9J3N0YWZybSc+DQ0KICA8dHI+IA0NCiAgICA8dGQgaGVpZ2h0PSIyOCIgY29sc3Bhbj0iMiIgYmFja2dyb3VuZD0naW1hZ2VzL3RiZy5naWYnPg0NCiAgICAJPHRhYmxlIHdpZHRoPSI5OCUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4NDQogICAgICAgIDx0cj4gDQ0KICAgICAgICAgIDx0ZCB3aWR0aD0iMzAlIiBoZWlnaHQ9IjE4IiBzdHlsZT0icGFkZGluZy1sZWZ0OjEwcHg7Ij48c3Ryb25nPuabtOaWsHdhcOaWh+aho0hUTUzvvJo8L3N0cm9uZz48L3RkPg0NCiAgICAgICAgICA8dGQgd2lkdGg9IjcwJSIgYWxpZ249InJpZ2h0Ij4NDQogICAgICAgICAgCTxhIGhyZWY9Im1ha2VodG1sX2xpc3Rfd2FwLnBocD90eXBlaWQ9PD9waHAgZWNobyAoaXNzZXQoJHR5cGVpZCkgPyAkdHlwZWlkIDogMCk7ID8+IiBjbGFzcz0ibnAgY29vbGJnIj7mm7TmlrB3YXDmoI/nm65IVE1MPC9hPg0NCiAgICAgICAgICA8L3RkPg0NCiAgICAgICAgPC90cj4NDQogICAgICA8L3RhYmxlPjwvdGQ+DQ0KICA8L3RyPg0NCiAgPHRyPiANDQogICAgPHRkIHdpZHRoPSIxMDgiIHZhbGlnbj0idG9wIiBiZ2NvbG9yPSIjRkZGRkZGIj7pgInmi6nmoI/nm67vvJo8L3RkPg0NCiAgICA8dGQgd2lkdGg9IjM3NyIgdmFsaWduPSJ0b3AiIGJnY29sb3I9IiNGRkZGRkYiPg0NCiAgICA8P3BocA0NCiAgICAgICBpZihlbXB0eSgkY2lkKSkgJGNpZD0iMCI7DQ0KICAgICAgICR0bCA9IG5ldyBUeXBlTGluaygkY2lkKTsNDQogICAgICAgJHR5cGVPcHRpb25zID0gJHRsLT5HZXRPcHRpb25BcnJheSgkY2lkLCRhZG1pbl9jYXRhbG9ncywwKTsNDQogICAgICAgZWNobyAiPHNlbGVjdCBuYW1lPSd0eXBlaWQnIHN0eWxlPSd3aWR0aDozMDAnPlxyXG4iOw0NCiAgICAgICBpZigkY2lkPT0iMCIpIGVjaG8gIjxvcHRpb24gdmFsdWU9JzAnIHNlbGVjdGVkPuabtOaWsOaJgOacieaWh+ahoy4uLjwvb3B0aW9uPlxyXG4iOw0NCiAgICAgICBlY2hvICR0eXBlT3B0aW9uczsNDQogICAgICAgZWNobyAiPC9zZWxlY3Q+IjsNDQoJCT8+DQ0KICAgPC90ZD4NDQogIDwvdHI+DQ0KICA8dHI+DQ0KICAgIDx0ZCBoZWlnaHQ9IjIwIiB2YWxpZ249InRvcCIgYmdjb2xvcj0iI0ZGRkZGRiI+6LW35aeLSUTvvJo8L3RkPg0NCiAgICA8dGQgaGVpZ2h0PSIyMCIgdmFsaWduPSJ0b3AiIGJnY29sb3I9IiNGRkZGRkYiPjxpbnB1dCBuYW1lPSJzdGFydGlkIiB0eXBlPSJ0ZXh0IiBpZD0ic3RhcnRpZCIgc2l6ZT0iMTAiPg0NCiAgICAgIO+8iOepuuaIljDooajnpLrku47lpLTlvIDlp4vvvIk8L3RkPg0NCiAgPC90cj4NDQogIDx0cj4gDQ0KICAgIDx0ZCBoZWlnaHQ9IjIwIiB2YWxpZ249InRvcCIgYmdjb2xvcj0iI0ZGRkZGRiI+57uT5p2fSUTvvJo8L3RkPg0NCiAgICA8dGQgaGVpZ2h0PSIyMCIgdmFsaWduPSJ0b3AiIGJnY29sb3I9IiNGRkZGRkYiPjxpbnB1dCBuYW1lPSJlbmRpZCIgdHlwZT0idGV4dCIgaWQ9ImVuZGlkIiBzaXplPSIxMCI+DQ0KICAgICAg77yI56m65oiWMOihqOekuuebtOWIsOe7k+adn0lE77yJIDwvdGQ+DQ0KICA8L3RyPg0NCiAgICA8dHI+IA0NCiAgICAgIDx0ZCBoZWlnaHQ9IjIwIiBiZ2NvbG9yPSIjRkZGRkZGIj7mr4/pobXnlJ/miJDvvJo8L3RkPg0NCiAgICAgIDx0ZCBoZWlnaHQ9IjIwIiBiZ2NvbG9yPSIjRkZGRkZGIj4gPGlucHV0IG5hbWU9InBhZ2VzaXplIiB0eXBlPSJ0ZXh0IiBpZD0icGFnZXNpemUiIHZhbHVlPSIyMCIgc2l6ZT0iOCI+DQ0KICAgICAgICDkuKrmlofku7Y8L3RkPg0NCiAgICA8L3RyPg0NCiAgICA8dHI+IA0NCiAgICAgIDx0ZCBoZWlnaHQ9IjIwIiBjb2xzcGFuPSIyIiBiZ2NvbG9yPSIjZmZmZmZmIiBhbGlnbj0iY2VudGVyIj4NDQogICAgICAJPGlucHV0IG5hbWU9ImIxMTIiIHR5cGU9ImJ1dHRvbiIgY2xhc3M9J2Nvb2xiZyBucCcgdmFsdWU9IuW8gOWni+eUn+aIkEhUTUwiIG9uQ2xpY2s9ImRvY3VtZW50LmZvcm0xLnN1Ym1pdCgpOyIgc3R5bGU9IndpZHRoOjEwMCI+ICA8P3BocCANDQogICAgICBpZigkY2ZnX3JlbW90ZV9zaXRlPT0nWScpDQ0KICAgICAgew0NCiAgICA/PiAgICANDQogICAgIDxpbnB1dCBuYW1lPSJpc3JlbW90ZSIgdHlwZT0iY2hlY2tib3giIGlkPSJpc3JlbW90ZSIgdmFsdWU9IjEiPg0NCuaYr+WQpuWQjOatpei/nOeoi+WPkeW4g+WIsCAgICAgDQ0KICAgICAgPD9waHAgR2V0RnRwKCk7Pz4NDQogICAgICA8P3BocA0NCiAgICAgIH0NDQogICAgPz4gIA0NCiAgICAgICAgJm5ic3A7DQ0KICAgICAgPGlucHV0IHR5cGU9ImJ1dHRvbiIgbmFtZT0iYjExMyIgdmFsdWU9Iuafpeeci+aJgOacieaWh+ahoyIgIGNsYXNzPSdjb29sYmcgbnAnIG9uQ2xpY2s9ImRvY3VtZW50LmZvcm0yLnN1Ym1pdCgpOyIgc3R5bGU9IndpZHRoOjEwMCI+PC90ZD4NDQogICAgPC90cj4NDQogIDwvZm9ybT4NDQogIDx0ciBiZ2NvbG9yPSIjRjlGQ0VGIj4gDQ0KICAgIDx0ZCBoZWlnaHQ9IjIwIiBjb2xzcGFuPSIyIj4gPHRhYmxlIHdpZHRoPSIxMDAlIj4NDQogICAgICAgIDx0cj4gDQ0KICAgICAgICAgIDx0ZCB3aWR0aD0iNzQlIj7ov5vooYznirbmgIHvvJogPC90ZD4NDQogICAgICAgICAgPHRkIHdpZHRoPSIyNiUiIGFsaWduPSJyaWdodCI+DQ0KICAgICAgICAgIAk8c2NyaXB0IGxhbmd1YWdlPSdqYXZhc2NyaXB0Jz4NDQogICAgICAgICAgICAJZnVuY3Rpb24gUmVzaXplRGl2KG9iaix0eSkNDQogICAgICAgICAgICAJew0NCiAgICAgICAgICAgIAkJaWYodHk9PSIrIikgZG9jdW1lbnQuYWxsW29ial0uc3R5bGUucGl4ZWxIZWlnaHQgKz0gNTA7DQ0KICAgICAgICAgICAgCQllbHNlIGlmKGRvY3VtZW50LmFsbFtvYmpdLnN0eWxlLnBpeGVsSGVpZ2h0PjgwKSBkb2N1bWVudC5hbGxbb2JqXS5zdHlsZS5waXhlbEhlaWdodCA9IGRvY3VtZW50LmFsbFtvYmpdLnN0eWxlLnBpeGVsSGVpZ2h0IC0gNTA7DQ0KICAgICAgICAgICAgCX0NDQogICAgICAgICAgICAJPC9zY3JpcHQ+DQ0KICAgICAgICAgICAgWzxhIGhyZWY9JyMnIG9uQ2xpY2s9IlJlc2l6ZURpdignbWR2JywnKycpOyI+5aKe5aSnPC9hPl0gWzxhIGhyZWY9JyMnIG9uQ2xpY2s9IlJlc2l6ZURpdignbWR2JywnLScpOyI+57yp5bCPPC9hPl0gDQ0KICAgICAgICAgIDwvdGQ+DQ0KICAgICAgICA8L3RyPg0NCiAgICAgIDwvdGFibGU+PC90ZD4NDQogIDwvdHI+DQ0KICA8dHIgYmdjb2xvcj0iI0ZGRkZGRiI+IA0NCiAgICA8dGQgY29sc3Bhbj0iMiIgaWQ9Im10ZCI+DQ0KICAgIAk8ZGl2IGlkPSdtZHYnIHN0eWxlPSd3aWR0aDoxMDAlO2hlaWdodDozNTBweDsnPiANDQogICAgICAgIDxpZnJhbWUgbmFtZT0ic3RhZnJtIiBmcmFtZWJvcmRlcj0iMCIgaWQ9InN0YWZybSIgd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSI+PC9pZnJhbWU+DQ0KICAgICAgPC9kaXY+DQ0KICAgIDwvdGQ+DQ0KICA8L3RyPg0NCjwvdGFibGU+DQ0KPC9ib2R5Pg0NCjwvaHRtbD4=
</file>
<file type='file' name='templets/makehtml_all_wap.htm'>
PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0NCjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4NDQo8aGVhZD4NDQo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD08P3BocCBlY2hvICRjZmdfc29mdF9sYW5nOyA/PiI+DQ0KPHRpdGxlPuS4gOmUruabtOaWsDwvdGl0bGU+DQ0KPGxpbmsgaHJlZj0iY3NzL2Jhc2UuY3NzIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPg0NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImpzL2NhbGVuZGFyL2NhbGVuZGFyLmpzIj48L3NjcmlwdD4NDQo8c2NyaXB0IGxhbmd1YWdlPSdqYXZhc2NyaXB0Jz4NDQpmdW5jdGlvbiBTZWxVcCgpew0NCiAgIHZhciBvYjEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidXB0eXBlMSIpOw0NCiAgIHZhciBvYjIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidXB0eXBlMiIpOw0NCiAgIHZhciBvYjMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidXB0eXBlMyIpOw0NCiAgIGlmKG9iMS5jaGVja2VkKXsNDQogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2VsdGltZSIpLnN0eWxlLmRpc3BsYXkgPSAiIjsNDQoJICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2VsaWQiKS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOw0NCiAgIH1lbHNlIGlmKG9iMi5jaGVja2VkKXsNDQogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2VsdGltZSIpLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7DQ0KCSAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInNlbGlkIikuc3R5bGUuZGlzcGxheSA9ICIiOw0NCiAgIH1lbHNlew0NCiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzZWx0aW1lIikuc3R5bGUuZGlzcGxheSA9ICJub25lIjsNDQoJICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2VsaWQiKS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOw0NCiAgIH0NDQp9DQ0KPC9zY3JpcHQ+DQ0KPC9oZWFkPg0NCjxib2R5IGJhY2tncm91bmQ9J2ltYWdlcy9hbGxiZy5naWYnIGxlZnRtYXJnaW49JzgnIHRvcG1hcmdpbj0nOCc+DQ0KPHRhYmxlIHdpZHRoPSI5OCUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjMiIGNlbGxzcGFjaW5nPSIxIiBiZ2NvbG9yPSIjRDZENkQ2IiBhbGlnbj0iY2VudGVyIj4NDQogIDxmb3JtIG5hbWU9ImZvcm0xIiBhY3Rpb249Im1ha2VodG1sX2FsbF93YXAucGhwIiB0YXJnZXQ9InN0YWZybSIgbWV0aG9kPSJwb3N0Ij4NDQogIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbiIgdmFsdWU9Im1ha2UiIC8+DQ0KICAgPHRyPg0NCiAgICA8dGQgaGVpZ2h0PSIyOCIgY29sc3Bhbj0iMiIgYmdjb2xvcj0iI0VERjlENSIgYmFja2dyb3VuZD0naW1hZ2VzL3RiZy5naWYnIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MTBweDsiPg0NCgkgICAgPHN0cm9uZz7kuIDplK7mm7TmlrB3YXDnvZHnq5nvvJo8L3N0cm9uZz48L3RkPg0NCiAgICA8L3RkPg0NCiAgICA8L3RyPg0NCiAgICA8dHI+DQ0KICAgICAgPHRkIHdpZHRoPSIzMCUiIGhlaWdodD0iMzAiICBiZ2NvbG9yPSIjRkZGRkZGIj4mbmJzcDsmbmJzcDvmm7TmlrDpgInpobnvvJo8L3RkPg0NCiAgICAgIDx0ZCB2YWxpZ249InRvcCIgYmdjb2xvcj0iI0ZGRkZGRiI+DQ0KCSAgIDxpbnB1dCBuYW1lPSJ1cHR5cGUiIGlkPSJ1cHR5cGUxIiB0eXBlPSJyYWRpbyIgY2xhc3M9Im5wIiB2YWx1ZT0idGltZSIgb25DbGljaz0iU2VsVXAoKSIgY2hlY2tlZD0iY2hlY2tlZCIgLz4NDQoJICAg5oyH5a6a5pe26Ze055qE5omA5pyJ5pu05pawDQ0KCSAgIDxpbnB1dCBuYW1lPSJ1cHR5cGUiIGlkPSJ1cHR5cGUyIiB0eXBlPSJyYWRpbyIgY2xhc3M9Im5wIiBvbkNsaWNrPSJTZWxVcCgpIiB2YWx1ZT0iaWQiIC8+DQ0KCSAgIOaMh+WumklE5paH5qGj55qE5omA5pyJ5pu05pawDQ0KCSAgIDxpbnB1dCBuYW1lPSJ1cHR5cGUiIGlkPSJ1cHR5cGUzIiB0eXBlPSJyYWRpbyIgY2xhc3M9Im5wIiBvbkNsaWNrPSJTZWxVcCgpIiB2YWx1ZT0ibWthbGwiIC8+DQ0KCSAgIOabtOaWsOaJgOaciQ0NCgkgICA8L3RkPg0NCiAgICA8L3RyPg0NCiAgICA8dHIgaWQ9J3NlbHRpbWUnPg0NCiAgICAgIDx0ZCBoZWlnaHQ9IjIwIiAgYmdjb2xvcj0iI0ZGRkZGRiI+Jm5ic3A7Jm5ic3A76LW35aeL5pe26Ze077yaPC90ZD4NDQogICAgICA8dGQgaGVpZ2h0PSIyMCIgIGJnY29sb3I9IiNGRkZGRkYiPg0NCiAgICAgIAk8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ic3RhcnR0aW1lIiBpZD0ic3RhcnR0aW1lIiB2YWx1ZT0iPD9waHAgZWNobyBHZXREYXRlTWsodGltZSgpKTsgPz4iIHN0eWxlPSJ3aWR0aDoyMDBweCIgLz4NDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdCBsYW5ndWFnZT0iamF2YXNjcmlwdCIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NDQoJCQkJCUNhbGVuZGFyLnNldHVwKHsNDQoJCQkJCQlpbnB1dEZpZWxkICAgICA6ICAgICJzdGFydHRpbWUiLA0NCgkJCQkJCWlmRm9ybWF0ICAgICAgIDogICAgIiVZLSVtLSVkIiwNDQoJCQkJCQlzaG93c1RpbWUgICAgICA6ICAgIGZhbHNlLA0NCgkJCQkJCXRpbWVGb3JtYXQgICAgIDogICAgIjI0Ig0NCgkJCQkJfSk7DQ0KCQkJCSA8L3NjcmlwdD4NDQogICAgICA8L3RkPg0NCiAgICA8L3RyPg0NCiAgICA8dHIgYmdjb2xvcj0iI0ZGRkZGRiIgaWQ9InNlbGlkIiBzdHlsZT0iZGlzcGxheTpub25lOyI+DQ0KICAgICAgPHRkIGhlaWdodD0iMjAiPiZuYnNwOyZuYnNwO+i1t+Wni0lE77yaPC90ZD4NDQogICAgICA8dGQgaGVpZ2h0PSIyMCI+DQ0KICAgICAgCTxpbnB1dCBuYW1lPSJzdGFydGlkIiB0eXBlPSJ0ZXh0IiBpZD0ic3RhcnRpZCIgdmFsdWU9IjAiIHNpemU9IjQiIC8+DQ0KICAgICAgPC90ZD4NDQogICAgPC90cj4NDQoJPHRyPg0NCiAgICAgIDx0ZCBoZWlnaHQ9IjMxIiBjb2xzcGFuPSIyIiBiZ2NvbG9yPSIjZmZmZmZmIiBhbGlnbj0iY2VudGVyIiBzdHlsZT0icGFkZGluZy10b3A6NnB4Ij4NDQogICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iU3VibWl0IiB2YWx1ZT0i5byA5aeL5pu05pawIiBjbGFzcz0iY29vbGJnIiAvPg0NCiAgICAgIDwvdGQ+DQ0KICAgIDwvdHI+DQ0KICA8L2Zvcm0+DQ0KICA8dHIgYmdjb2xvcj0iI0Y5RkNFRiI+DQ0KICAgIDx0ZCBoZWlnaHQ9IjIwIiBjb2xzcGFuPSIyIj4NDQogICAgPHRhYmxlIHdpZHRoPSIxMDAlIj4NDQogICAgIDx0cj4NDQogICAgICA8dGQgd2lkdGg9Ijc0JSI+6L+b6KGM54q25oCB77yaIDwvdGQ+DQ0KICAgICAgIDx0ZCB3aWR0aD0iMjYlIiBhbGlnbj0icmlnaHQiPg0NCgkJICAgIDxzY3JpcHQgbGFuZ3VhZ2U9J2phdmFzY3JpcHQnPg0NCiAgICAgICAgICAgIAlmdW5jdGlvbiBSZXNpemVEaXYob2JqLHR5KQ0NCiAgICAgICAgICAgIAl7DQ0KICAgICAgICAgICAgCQlpZih0eT09IisiKSBkb2N1bWVudC5hbGxbb2JqXS5zdHlsZS5waXhlbEhlaWdodCArPSA1MDsNDQogICAgICAgICAgICAJCWVsc2UgaWYoZG9jdW1lbnQuYWxsW29ial0uc3R5bGUucGl4ZWxIZWlnaHQ+ODApIGRvY3VtZW50LmFsbFtvYmpdLnN0eWxlLnBpeGVsSGVpZ2h0ID0gZG9jdW1lbnQuYWxsW29ial0uc3R5bGUucGl4ZWxIZWlnaHQgLSA1MDsNDQogICAgICAgICAgICAJfQ0NCiAgICAgICAgICAgIAk8L3NjcmlwdD4NDQogICAgICAgICAgICBbPGEgaHJlZj0nIycgb25DbGljaz0iUmVzaXplRGl2KCdtZHYnLCcrJyk7Ij7lop7lpKc8L2E+XSBbPGEgaHJlZj0nIycgb25DbGljaz0iUmVzaXplRGl2KCdtZHYnLCctJyk7Ij7nvKnlsI88L2E+XSAgICAgICAgICA8L3RkPg0NCiAgICAgICAgPC90cj4NDQogICAgICA8L3RhYmxlPg0NCiAgICAgPC90ZD4NDQogICA8L3RyPg0NCiAgIDx0ciBiZ2NvbG9yPSIjRkZGRkZGIj4NDQogICAgPHRkIGNvbHNwYW49IjIiIGlkPSJtdGQiPg0NCgkgIDxkaXYgaWQ9J21kdicgc3R5bGU9J3dpZHRoOjEwMCU7aGVpZ2h0OjM1MHB4Oyc+DQ0KICAgICAgPGlmcmFtZSBuYW1lPSJzdGFmcm0iIGZyYW1lYm9yZGVyPSIwIiBpZD0ic3RhZnJtIiB3aWR0aD0iMTAwJSIgaGVpZ2h0PSIzNTBweCI+PC9pZnJhbWU+DQ0KICAgPC9kaXY+DQ0KICAgPHNjcmlwdCBsYW5ndWFnZT0iSmF2YVNjcmlwdCI+DQ0KCSAgZG9jdW1lbnQuYWxsLm1kdi5zdHlsZS5waXhlbEhlaWdodCA9IHNjcmVlbi5oZWlnaHQgLSAzNjA7DQ0KCSAgPC9zY3JpcHQ+DQ0KICAgPC90ZD4NDQogIDwvdHI+DQ0KPC90YWJsZT4NDQo8L2JvZHk+DQ0KPC9odG1sPg==
</file>
<file type='file' name='inc/inc_menu.php'>

</file>
</modulefiles>
</module>
